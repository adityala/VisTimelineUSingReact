{"ast":null,"code":"import _objectSpread from \"E:/ELSY Practice/react/SandboxVis Timeline React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"E:/ELSY Practice/react/SandboxVis Timeline React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"E:/ELSY Practice/react/SandboxVis Timeline React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"E:/ELSY Practice/react/SandboxVis Timeline React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n/**\n * vis-util\n * https://github.com/visjs/vis-util\n *\n * utilitie collection for visjs\n *\n * @version 4.3.4\n * @date    2020-08-01T15:11:53.524Z\n *\n * @copyright (c) 2011-2017 Almende B.V, http://almende.com\n * @copyright (c) 2017-2019 visjs contributors, https://github.com/visjs\n *\n * @license\n * vis.js is dual licensed under both\n *\n *   1. The Apache 2.0 License\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *   and\n *\n *   2. The MIT License\n *      http://opensource.org/licenses/MIT\n *\n * vis.js may be distributed under either license.\n */\n\n/**\r\n * Use this symbol to delete properies in deepObjectAssign.\r\n */\nvar DELETE = Symbol(\"DELETE\");\n/**\r\n * Pure version of deepObjectAssign, it doesn't modify any of it's arguments.\r\n *\r\n * @param base - The base object that fullfils the whole interface T.\r\n * @param updates - Updates that may change or delete props.\r\n *\r\n * @returns A brand new instance with all the supplied objects deeply merged.\r\n */\nfunction pureDeepObjectAssign(base) {\n  for (var _len = arguments.length, updates = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    updates[_key - 1] = arguments[_key];\n  }\n  return deepObjectAssign.apply(void 0, [{}, base].concat(updates));\n}\n/**\r\n * Deep version of object assign with additional deleting by the DELETE symbol.\r\n *\r\n * @param values - Objects to be deeply merged.\r\n *\r\n * @returns The first object from values.\r\n */\nfunction deepObjectAssign() {\n  var merged = deepObjectAssignNonentry.apply(void 0, arguments);\n  stripDelete(merged);\n  return merged;\n}\n/**\r\n * Deep version of object assign with additional deleting by the DELETE symbol.\r\n *\r\n * @remarks\r\n * This doesn't strip the DELETE symbols so they may end up in the final object.\r\n *\r\n * @param values - Objects to be deeply merged.\r\n *\r\n * @returns The first object from values.\r\n */\nfunction deepObjectAssignNonentry() {\n  for (var _len2 = arguments.length, values = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    values[_key2] = arguments[_key2];\n  }\n  if (values.length < 2) {\n    return values[0];\n  } else if (values.length > 2) {\n    return deepObjectAssignNonentry.apply(void 0, [deepObjectAssign(values[0], values[1])].concat(_toConsumableArray(values.slice(2))));\n  }\n  var a = values[0];\n  var b = values[1];\n  var _iterator = _createForOfIteratorHelper(Reflect.ownKeys(b)),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var prop = _step.value;\n      if (!Object.prototype.propertyIsEnumerable.call(b, prop)) ;else if (b[prop] === DELETE) {\n        delete a[prop];\n      } else if (a[prop] !== null && b[prop] !== null && typeof a[prop] === \"object\" && typeof b[prop] === \"object\" && !Array.isArray(a[prop]) && !Array.isArray(b[prop])) {\n        a[prop] = deepObjectAssignNonentry(a[prop], b[prop]);\n      } else {\n        a[prop] = clone(b[prop]);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return a;\n}\n/**\r\n * Deep clone given object or array. In case of primitive simply return.\r\n *\r\n * @param a - Anything.\r\n *\r\n * @returns Deep cloned object/array or unchanged a.\r\n */\nfunction clone(a) {\n  if (Array.isArray(a)) {\n    return a.map(function (value) {\n      return clone(value);\n    });\n  } else if (typeof a === \"object\" && a !== null) {\n    return deepObjectAssignNonentry({}, a);\n  } else {\n    return a;\n  }\n}\n/**\r\n * Strip DELETE from given object.\r\n *\r\n * @param a - Object which may contain DELETE but won't after this is executed.\r\n */\nfunction stripDelete(a) {\n  for (var _i = 0, _Object$keys = Object.keys(a); _i < _Object$keys.length; _i++) {\n    var prop = _Object$keys[_i];\n    if (a[prop] === DELETE) {\n      delete a[prop];\n    } else if (typeof a[prop] === \"object\" && a[prop] !== null) {\n      stripDelete(a[prop]);\n    }\n  }\n}\n\n/**\r\n * Seedable, fast and reasonably good (not crypto but more than okay for our\r\n * needs) random number generator.\r\n *\r\n * @remarks\r\n * Adapted from {@link https://web.archive.org/web/20110429100736/http://baagoe.com:80/en/RandomMusings/javascript}.\r\n * Original algorithm created by Johannes Baagøe \\<baagoe\\@baagoe.com\\> in 2010.\r\n */\n/**\r\n * Create a seeded pseudo random generator based on Alea by Johannes Baagøe.\r\n *\r\n * @param seed - All supplied arguments will be used as a seed. In case nothing\r\n * is supplied the current time will be used to seed the generator.\r\n *\r\n * @returns A ready to use seeded generator.\r\n */\nfunction Alea() {\n  for (var _len3 = arguments.length, seed = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    seed[_key3] = arguments[_key3];\n  }\n  return AleaImplementation(seed.length ? seed : [Date.now()]);\n}\n/**\r\n * An implementation of [[Alea]] without user input validation.\r\n *\r\n * @param seed - The data that will be used to seed the generator.\r\n *\r\n * @returns A ready to use seeded generator.\r\n */\nfunction AleaImplementation(seed) {\n  var _mashSeed = mashSeed(seed),\n    _mashSeed2 = _slicedToArray(_mashSeed, 3),\n    s0 = _mashSeed2[0],\n    s1 = _mashSeed2[1],\n    s2 = _mashSeed2[2];\n  var c = 1;\n  var random = function random() {\n    var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n    s0 = s1;\n    s1 = s2;\n    return s2 = t - (c = t | 0);\n  };\n  random.uint32 = function () {\n    return random() * 0x100000000;\n  }; // 2^32\n  random.fract53 = function () {\n    return random() + (random() * 0x200000 | 0) * 1.1102230246251565e-16;\n  }; // 2^-53\n  random.algorithm = \"Alea\";\n  random.seed = seed;\n  random.version = \"0.9\";\n  return random;\n}\n/**\r\n * Turn arbitrary data into values [[AleaImplementation]] can use to generate\r\n * random numbers.\r\n *\r\n * @param seed - Arbitrary data that will be used as the seed.\r\n *\r\n * @returns Three numbers to use as initial values for [[AleaImplementation]].\r\n */\nfunction mashSeed() {\n  var mash = Mash();\n  var s0 = mash(\" \");\n  var s1 = mash(\" \");\n  var s2 = mash(\" \");\n  for (var i = 0; i < arguments.length; i++) {\n    s0 -= mash(i < 0 || arguments.length <= i ? undefined : arguments[i]);\n    if (s0 < 0) {\n      s0 += 1;\n    }\n    s1 -= mash(i < 0 || arguments.length <= i ? undefined : arguments[i]);\n    if (s1 < 0) {\n      s1 += 1;\n    }\n    s2 -= mash(i < 0 || arguments.length <= i ? undefined : arguments[i]);\n    if (s2 < 0) {\n      s2 += 1;\n    }\n  }\n  return [s0, s1, s2];\n}\n/**\r\n * Create a new mash function.\r\n *\r\n * @returns A nonpure function that takes arbitrary [[Mashable]] data and turns\r\n * them into numbers.\r\n */\nfunction Mash() {\n  var n = 0xefc8249d;\n  return function (data) {\n    var string = data.toString();\n    for (var i = 0; i < string.length; i++) {\n      n += string.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n}\n\n// utility functions\n// parse ASP.Net Date pattern,\n// for example '/Date(1198908717056)/' or '/Date(1198908717056-0700)/'\n// code from http://momentjs.com/\nvar ASPDateRegex = /^\\/?Date\\((-?\\d+)/i;\n// Color REs\nvar fullHexRE = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\nvar shortHexRE = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\nvar rgbRE = /^rgb\\( *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *, *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *, *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *\\)$/i;\nvar rgbaRE = /^rgba\\( *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *, *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *, *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *, *([01]|0?\\.\\d+) *\\)$/i;\n/**\r\n * Test whether given object is a number.\r\n *\r\n * @param value - Input value of unknown type.\r\n *\r\n * @returns True if number, false otherwise.\r\n */\nfunction isNumber(value) {\n  return value instanceof Number || typeof value === \"number\";\n}\n/**\r\n * Remove everything in the DOM object.\r\n *\r\n * @param DOMobject - Node whose child nodes will be recursively deleted.\r\n */\nfunction recursiveDOMDelete(DOMobject) {\n  if (DOMobject) {\n    while (DOMobject.hasChildNodes() === true) {\n      var child = DOMobject.firstChild;\n      if (child) {\n        recursiveDOMDelete(child);\n        DOMobject.removeChild(child);\n      }\n    }\n  }\n}\n/**\r\n * Test whether given object is a string.\r\n *\r\n * @param value - Input value of unknown type.\r\n *\r\n * @returns True if string, false otherwise.\r\n */\nfunction isString(value) {\n  return value instanceof String || typeof value === \"string\";\n}\n/**\r\n * Test whether given object is a object (not primitive or null).\r\n *\r\n * @param value - Input value of unknown type.\r\n *\r\n * @returns True if not null object, false otherwise.\r\n */\nfunction isObject(value) {\n  return typeof value === \"object\" && value !== null;\n}\n/**\r\n * Test whether given object is a Date, or a String containing a Date.\r\n *\r\n * @param value - Input value of unknown type.\r\n *\r\n * @returns True if Date instance or string date representation, false otherwise.\r\n */\nfunction isDate(value) {\n  if (value instanceof Date) {\n    return true;\n  } else if (isString(value)) {\n    // test whether this string contains a date\n    var match = ASPDateRegex.exec(value);\n    if (match) {\n      return true;\n    } else if (!isNaN(Date.parse(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n/**\r\n * Copy property from b to a if property present in a.\r\n * If property in b explicitly set to null, delete it if `allowDeletion` set.\r\n *\r\n * Internal helper routine, should not be exported. Not added to `exports` for that reason.\r\n *\r\n * @param a - Target object.\r\n * @param b - Source object.\r\n * @param prop - Name of property to copy from b to a.\r\n * @param allowDeletion - If true, delete property in a if explicitly set to null in b.\r\n */\nfunction copyOrDelete(a, b, prop, allowDeletion) {\n  var doDeletion = false;\n  if (allowDeletion === true) {\n    doDeletion = b[prop] === null && a[prop] !== undefined;\n  }\n  if (doDeletion) {\n    delete a[prop];\n  } else {\n    a[prop] = b[prop]; // Remember, this is a reference copy!\n  }\n}\n/**\r\n * Fill an object with a possibly partially defined other object.\r\n *\r\n * Only copies values for the properties already present in a.\r\n * That means an object is not created on a property if only the b object has it.\r\n *\r\n * @param a - The object that will have it's properties updated.\r\n * @param b - The object with property updates.\r\n * @param allowDeletion - If true, delete properties in a that are explicitly set to null in b.\r\n */\nfunction fillIfDefined(a, b) {\n  var allowDeletion = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  // NOTE: iteration of properties of a\n  // NOTE: prototype properties iterated over as well\n  for (var prop in a) {\n    if (b[prop] !== undefined) {\n      if (b[prop] === null || typeof b[prop] !== \"object\") {\n        // Note: typeof null === 'object'\n        copyOrDelete(a, b, prop, allowDeletion);\n      } else {\n        var aProp = a[prop];\n        var bProp = b[prop];\n        if (isObject(aProp) && isObject(bProp)) {\n          fillIfDefined(aProp, bProp, allowDeletion);\n        }\n      }\n    }\n  }\n}\n/**\r\n * Copy the values of all of the enumerable own properties from one or more source objects to a\r\n * target object. Returns the target object.\r\n *\r\n * @param target - The target object to copy to.\r\n * @param source - The source object from which to copy properties.\r\n *\r\n * @returns The target object.\r\n */\nvar extend = Object.assign;\n/**\r\n * Extend object a with selected properties of object b or a series of objects.\r\n *\r\n * @remarks\r\n * Only properties with defined values are copied.\r\n *\r\n * @param props - Properties to be copied to a.\r\n * @param a - The target.\r\n * @param others - The sources.\r\n *\r\n * @returns Argument a.\r\n */\nfunction selectiveExtend(props, a) {\n  if (!Array.isArray(props)) {\n    throw new Error(\"Array with property names expected as first argument\");\n  }\n  for (var _len4 = arguments.length, others = new Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {\n    others[_key4 - 2] = arguments[_key4];\n  }\n  for (var _i2 = 0, _others = others; _i2 < _others.length; _i2++) {\n    var other = _others[_i2];\n    for (var p = 0; p < props.length; p++) {\n      var prop = props[p];\n      if (other && Object.prototype.hasOwnProperty.call(other, prop)) {\n        a[prop] = other[prop];\n      }\n    }\n  }\n  return a;\n}\n/**\r\n * Extend object a with selected properties of object b.\r\n * Only properties with defined values are copied.\r\n *\r\n * @remarks\r\n * Previous version of this routine implied that multiple source objects could\r\n * be used; however, the implementation was **wrong**. Since multiple (\\>1)\r\n * sources weren't used anywhere in the `vis.js` code, this has been removed\r\n *\r\n * @param props - Names of first-level properties to copy over.\r\n * @param a - Target object.\r\n * @param b - Source object.\r\n * @param allowDeletion - If true, delete property in a if explicitly set to null in b.\r\n *\r\n * @returns Argument a.\r\n */\nfunction selectiveDeepExtend(props, a, b) {\n  var allowDeletion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  // TODO: add support for Arrays to deepExtend\n  if (Array.isArray(b)) {\n    throw new TypeError(\"Arrays are not supported by deepExtend\");\n  }\n  for (var p = 0; p < props.length; p++) {\n    var prop = props[p];\n    if (Object.prototype.hasOwnProperty.call(b, prop)) {\n      if (b[prop] && b[prop].constructor === Object) {\n        if (a[prop] === undefined) {\n          a[prop] = {};\n        }\n        if (a[prop].constructor === Object) {\n          deepExtend(a[prop], b[prop], false, allowDeletion);\n        } else {\n          copyOrDelete(a, b, prop, allowDeletion);\n        }\n      } else if (Array.isArray(b[prop])) {\n        throw new TypeError(\"Arrays are not supported by deepExtend\");\n      } else {\n        copyOrDelete(a, b, prop, allowDeletion);\n      }\n    }\n  }\n  return a;\n}\n/**\r\n * Extend object `a` with properties of object `b`, ignoring properties which\r\n * are explicitly specified to be excluded.\r\n *\r\n * @remarks\r\n * The properties of `b` are considered for copying. Properties which are\r\n * themselves objects are are also extended. Only properties with defined\r\n * values are copied.\r\n *\r\n * @param propsToExclude - Names of properties which should *not* be copied.\r\n * @param a - Object to extend.\r\n * @param b - Object to take properties from for extension.\r\n * @param allowDeletion - If true, delete properties in a that are explicitly\r\n * set to null in b.\r\n *\r\n * @returns Argument a.\r\n */\nfunction selectiveNotDeepExtend(propsToExclude, a, b) {\n  var allowDeletion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  // TODO: add support for Arrays to deepExtend\n  // NOTE: array properties have an else-below; apparently, there is a problem here.\n  if (Array.isArray(b)) {\n    throw new TypeError(\"Arrays are not supported by deepExtend\");\n  }\n  for (var prop in b) {\n    if (!Object.prototype.hasOwnProperty.call(b, prop)) {\n      continue;\n    } // Handle local properties only\n    if (propsToExclude.indexOf(prop) !== -1) {\n      continue;\n    } // In exclusion list, skip\n    if (b[prop] && b[prop].constructor === Object) {\n      if (a[prop] === undefined) {\n        a[prop] = {};\n      }\n      if (a[prop].constructor === Object) {\n        deepExtend(a[prop], b[prop]); // NOTE: allowDeletion not propagated!\n      } else {\n        copyOrDelete(a, b, prop, allowDeletion);\n      }\n    } else if (Array.isArray(b[prop])) {\n      a[prop] = [];\n      for (var i = 0; i < b[prop].length; i++) {\n        a[prop].push(b[prop][i]);\n      }\n    } else {\n      copyOrDelete(a, b, prop, allowDeletion);\n    }\n  }\n  return a;\n}\n/**\r\n * Deep extend an object a with the properties of object b.\r\n *\r\n * @param a - Target object.\r\n * @param b - Source object.\r\n * @param protoExtend - If true, the prototype values will also be extended.\r\n * (That is the options objects that inherit from others will also get the\r\n * inherited options).\r\n * @param allowDeletion - If true, the values of fields that are null will be deleted.\r\n *\r\n * @returns Argument a.\r\n */\nfunction deepExtend(a, b) {\n  var protoExtend = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var allowDeletion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  for (var prop in b) {\n    if (Object.prototype.hasOwnProperty.call(b, prop) || protoExtend === true) {\n      if (typeof b[prop] === \"object\" && b[prop] !== null && Object.getPrototypeOf(b[prop]) === Object.prototype) {\n        if (a[prop] === undefined) {\n          a[prop] = deepExtend({}, b[prop], protoExtend); // NOTE: allowDeletion not propagated!\n        } else if (typeof a[prop] === \"object\" && a[prop] !== null && Object.getPrototypeOf(a[prop]) === Object.prototype) {\n          deepExtend(a[prop], b[prop], protoExtend); // NOTE: allowDeletion not propagated!\n        } else {\n          copyOrDelete(a, b, prop, allowDeletion);\n        }\n      } else if (Array.isArray(b[prop])) {\n        a[prop] = b[prop].slice();\n      } else {\n        copyOrDelete(a, b, prop, allowDeletion);\n      }\n    }\n  }\n  return a;\n}\n/**\r\n * Test whether all elements in two arrays are equal.\r\n *\r\n * @param a - First array.\r\n * @param b - Second array.\r\n *\r\n * @returns True if both arrays have the same length and same elements (1 = '1').\r\n */\nfunction equalArray(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (var i = 0, len = a.length; i < len; i++) {\n    if (a[i] != b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\r\n * Get the type of an object, for example exports.getType([]) returns 'Array'.\r\n *\r\n * @param object - Input value of unknown type.\r\n *\r\n * @returns Detected type.\r\n */\nfunction getType(object) {\n  var type = typeof object;\n  if (type === \"object\") {\n    if (object === null) {\n      return \"null\";\n    }\n    if (object instanceof Boolean) {\n      return \"Boolean\";\n    }\n    if (object instanceof Number) {\n      return \"Number\";\n    }\n    if (object instanceof String) {\n      return \"String\";\n    }\n    if (Array.isArray(object)) {\n      return \"Array\";\n    }\n    if (object instanceof Date) {\n      return \"Date\";\n    }\n    return \"Object\";\n  }\n  if (type === \"number\") {\n    return \"Number\";\n  }\n  if (type === \"boolean\") {\n    return \"Boolean\";\n  }\n  if (type === \"string\") {\n    return \"String\";\n  }\n  if (type === undefined) {\n    return \"undefined\";\n  }\n  return type;\n}\n/**\r\n * Used to extend an array and copy it. This is used to propagate paths recursively.\r\n *\r\n * @param arr - First part.\r\n * @param newValue - The value to be aadded into the array.\r\n *\r\n * @returns A new array with all items from arr and newValue (which is last).\r\n */\nfunction copyAndExtendArray(arr, newValue) {\n  return [].concat(_toConsumableArray(arr), [newValue]);\n}\n/**\r\n * Used to extend an array and copy it. This is used to propagate paths recursively.\r\n *\r\n * @param arr - The array to be copied.\r\n *\r\n * @returns Shallow copy of arr.\r\n */\nfunction copyArray(arr) {\n  return arr.slice();\n}\n/**\r\n * Retrieve the absolute left value of a DOM element.\r\n *\r\n * @param elem - A dom element, for example a div.\r\n *\r\n * @returns The absolute left position of this element in the browser page.\r\n */\nfunction getAbsoluteLeft(elem) {\n  return elem.getBoundingClientRect().left;\n}\n/**\r\n * Retrieve the absolute right value of a DOM element.\r\n *\r\n * @param elem - A dom element, for example a div.\r\n *\r\n * @returns The absolute right position of this element in the browser page.\r\n */\nfunction getAbsoluteRight(elem) {\n  return elem.getBoundingClientRect().right;\n}\n/**\r\n * Retrieve the absolute top value of a DOM element.\r\n *\r\n * @param elem - A dom element, for example a div.\r\n *\r\n * @returns The absolute top position of this element in the browser page.\r\n */\nfunction getAbsoluteTop(elem) {\n  return elem.getBoundingClientRect().top;\n}\n/**\r\n * Add a className to the given elements style.\r\n *\r\n * @param elem - The element to which the classes will be added.\r\n * @param classNames - Space separated list of classes.\r\n */\nfunction addClassName(elem, classNames) {\n  var classes = elem.className.split(\" \");\n  var newClasses = classNames.split(\" \");\n  classes = classes.concat(newClasses.filter(function (className) {\n    return classes.indexOf(className) < 0;\n  }));\n  elem.className = classes.join(\" \");\n}\n/**\r\n * Remove a className from the given elements style.\r\n *\r\n * @param elem - The element from which the classes will be removed.\r\n * @param classNames - Space separated list of classes.\r\n */\nfunction removeClassName(elem, classNames) {\n  var classes = elem.className.split(\" \");\n  var oldClasses = classNames.split(\" \");\n  classes = classes.filter(function (className) {\n    return oldClasses.indexOf(className) < 0;\n  });\n  elem.className = classes.join(\" \");\n}\n/**\r\n * For each method for both arrays and objects.\r\n * In case of an array, the built-in Array.forEach() is applied (**No, it's not!**).\r\n * In case of an Object, the method loops over all properties of the object.\r\n *\r\n * @param object - An Object or Array to be iterated over.\r\n * @param callback - Array.forEach-like callback.\r\n */\nfunction forEach(object, callback) {\n  if (Array.isArray(object)) {\n    // array\n    var len = object.length;\n    for (var i = 0; i < len; i++) {\n      callback(object[i], i, object);\n    }\n  } else {\n    // object\n    for (var key in object) {\n      if (Object.prototype.hasOwnProperty.call(object, key)) {\n        callback(object[key], key, object);\n      }\n    }\n  }\n}\n/**\r\n * Convert an object into an array: all objects properties are put into the array. The resulting array is unordered.\r\n *\r\n * @param o - Object that contains the properties and methods.\r\n *\r\n * @returns An array of unordered values.\r\n */\nvar toArray = Object.values;\n/**\r\n * Update a property in an object.\r\n *\r\n * @param object - The object whose property will be updated.\r\n * @param key - Name of the property to be updated.\r\n * @param value - The new value to be assigned.\r\n *\r\n * @returns Whether the value was updated (true) or already strictly the same in the original object (false).\r\n */\nfunction updateProperty(object, key, value) {\n  if (object[key] !== value) {\n    object[key] = value;\n    return true;\n  } else {\n    return false;\n  }\n}\n/**\r\n * Throttle the given function to be only executed once per animation frame.\r\n *\r\n * @param fn - The original function.\r\n *\r\n * @returns The throttled function.\r\n */\nfunction throttle(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      requestAnimationFrame(function () {\n        scheduled = false;\n        fn();\n      });\n    }\n  };\n}\n/**\r\n * Add and event listener. Works for all browsers.\r\n *\r\n * @param element - The element to bind the event listener to.\r\n * @param action - Same as Element.addEventListener(action, —, —).\r\n * @param listener - Same as Element.addEventListener(—, listener, —).\r\n * @param useCapture - Same as Element.addEventListener(—, —, useCapture).\r\n */\nfunction addEventListener(element, action, listener, useCapture) {\n  if (element.addEventListener) {\n    if (useCapture === undefined) {\n      useCapture = false;\n    }\n    if (action === \"mousewheel\" && navigator.userAgent.indexOf(\"Firefox\") >= 0) {\n      action = \"DOMMouseScroll\"; // For Firefox\n    }\n\n    element.addEventListener(action, listener, useCapture);\n  } else {\n    // @TODO: IE types? Does anyone care?\n    element.attachEvent(\"on\" + action, listener); // IE browsers\n  }\n}\n/**\r\n * Remove an event listener from an element.\r\n *\r\n * @param element - The element to bind the event listener to.\r\n * @param action - Same as Element.removeEventListener(action, —, —).\r\n * @param listener - Same as Element.removeEventListener(—, listener, —).\r\n * @param useCapture - Same as Element.removeEventListener(—, —, useCapture).\r\n */\nfunction removeEventListener(element, action, listener, useCapture) {\n  if (element.removeEventListener) {\n    // non-IE browsers\n    if (useCapture === undefined) {\n      useCapture = false;\n    }\n    if (action === \"mousewheel\" && navigator.userAgent.indexOf(\"Firefox\") >= 0) {\n      action = \"DOMMouseScroll\"; // For Firefox\n    }\n\n    element.removeEventListener(action, listener, useCapture);\n  } else {\n    // @TODO: IE types? Does anyone care?\n    element.detachEvent(\"on\" + action, listener); // IE browsers\n  }\n}\n/**\r\n * Cancels the event's default action if it is cancelable, without stopping further propagation of the event.\r\n *\r\n * @param event - The event whose default action should be prevented.\r\n */\nfunction preventDefault(event) {\n  if (!event) {\n    event = window.event;\n  }\n  if (!event) ;else if (event.preventDefault) {\n    event.preventDefault(); // non-IE browsers\n  } else {\n    // @TODO: IE types? Does anyone care?\n    event.returnValue = false; // IE browsers\n  }\n}\n/**\r\n * Get HTML element which is the target of the event.\r\n *\r\n * @param event - The event.\r\n *\r\n * @returns The element or null if not obtainable.\r\n */\nfunction getTarget() {\n  var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.event;\n  // code from http://www.quirksmode.org/js/events_properties.html\n  // @TODO: EventTarget can be almost anything, is it okay to return only Elements?\n  var target = null;\n  if (!event) ;else if (event.target) {\n    target = event.target;\n  } else if (event.srcElement) {\n    target = event.srcElement;\n  }\n  if (!(target instanceof Element)) {\n    return null;\n  }\n  if (target.nodeType != null && target.nodeType == 3) {\n    // defeat Safari bug\n    target = target.parentNode;\n    if (!(target instanceof Element)) {\n      return null;\n    }\n  }\n  return target;\n}\n/**\r\n * Check if given element contains given parent somewhere in the DOM tree.\r\n *\r\n * @param element - The element to be tested.\r\n * @param parent - The ancestor (not necessarily parent) of the element.\r\n *\r\n * @returns True if parent is an ancestor of the element, false otherwise.\r\n */\nfunction hasParent(element, parent) {\n  var elem = element;\n  while (elem) {\n    if (elem === parent) {\n      return true;\n    } else if (elem.parentNode) {\n      elem = elem.parentNode;\n    } else {\n      return false;\n    }\n  }\n  return false;\n}\nvar option = {\n  /**\r\n   * Convert a value into a boolean.\r\n   *\r\n   * @param value - Value to be converted intoboolean, a function will be executed as `(() => unknown)`.\r\n   * @param defaultValue - If the value or the return value of the function == null then this will be returned.\r\n   *\r\n   * @returns Corresponding boolean value, if none then the default value, if none then null.\r\n   */\n  asBoolean: function asBoolean(value, defaultValue) {\n    if (typeof value == \"function\") {\n      value = value();\n    }\n    if (value != null) {\n      return value != false;\n    }\n    return defaultValue || null;\n  },\n  /**\r\n   * Convert a value into a number.\r\n   *\r\n   * @param value - Value to be converted intonumber, a function will be executed as `(() => unknown)`.\r\n   * @param defaultValue - If the value or the return value of the function == null then this will be returned.\r\n   *\r\n   * @returns Corresponding **boxed** number value, if none then the default value, if none then null.\r\n   */\n  asNumber: function asNumber(value, defaultValue) {\n    if (typeof value == \"function\") {\n      value = value();\n    }\n    if (value != null) {\n      return Number(value) || defaultValue || null;\n    }\n    return defaultValue || null;\n  },\n  /**\r\n   * Convert a value into a string.\r\n   *\r\n   * @param value - Value to be converted intostring, a function will be executed as `(() => unknown)`.\r\n   * @param defaultValue - If the value or the return value of the function == null then this will be returned.\r\n   *\r\n   * @returns Corresponding **boxed** string value, if none then the default value, if none then null.\r\n   */\n  asString: function asString(value, defaultValue) {\n    if (typeof value == \"function\") {\n      value = value();\n    }\n    if (value != null) {\n      return String(value);\n    }\n    return defaultValue || null;\n  },\n  /**\r\n   * Convert a value into a size.\r\n   *\r\n   * @param value - Value to be converted intosize, a function will be executed as `(() => unknown)`.\r\n   * @param defaultValue - If the value or the return value of the function == null then this will be returned.\r\n   *\r\n   * @returns Corresponding string value (number + 'px'), if none then the default value, if none then null.\r\n   */\n  asSize: function asSize(value, defaultValue) {\n    if (typeof value == \"function\") {\n      value = value();\n    }\n    if (isString(value)) {\n      return value;\n    } else if (isNumber(value)) {\n      return value + \"px\";\n    } else {\n      return defaultValue || null;\n    }\n  },\n  /**\r\n   * Convert a value into a DOM Element.\r\n   *\r\n   * @param value - Value to be converted into DOM Element, a function will be executed as `(() => unknown)`.\r\n   * @param defaultValue - If the value or the return value of the function == null then this will be returned.\r\n   *\r\n   * @returns The DOM Element, if none then the default value, if none then null.\r\n   */\n  asElement: function asElement(value, defaultValue) {\n    if (typeof value == \"function\") {\n      value = value();\n    }\n    return value || defaultValue || null;\n  }\n};\n/**\r\n * Convert hex color string into RGB color object.\r\n *\r\n * @remarks\r\n * {@link http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb}\r\n *\r\n * @param hex - Hex color string (3 or 6 digits, with or without #).\r\n *\r\n * @returns RGB color object.\r\n */\nfunction hexToRGB(hex) {\n  var result;\n  switch (hex.length) {\n    case 3:\n    case 4:\n      result = shortHexRE.exec(hex);\n      return result ? {\n        r: parseInt(result[1] + result[1], 16),\n        g: parseInt(result[2] + result[2], 16),\n        b: parseInt(result[3] + result[3], 16)\n      } : null;\n    case 6:\n    case 7:\n      result = fullHexRE.exec(hex);\n      return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n      } : null;\n    default:\n      return null;\n  }\n}\n/**\r\n * This function takes string color in hex or RGB format and adds the opacity, RGBA is passed through unchanged.\r\n *\r\n * @param color - The color string (hex, RGB, RGBA).\r\n * @param opacity - The new opacity.\r\n *\r\n * @returns RGBA string, for example 'rgba(255, 0, 127, 0.3)'.\r\n */\nfunction overrideOpacity(color, opacity) {\n  if (color.indexOf(\"rgba\") !== -1) {\n    return color;\n  } else if (color.indexOf(\"rgb\") !== -1) {\n    var rgb = color.substr(color.indexOf(\"(\") + 1).replace(\")\", \"\").split(\",\");\n    return \"rgba(\" + rgb[0] + \",\" + rgb[1] + \",\" + rgb[2] + \",\" + opacity + \")\";\n  } else {\n    var _rgb = hexToRGB(color);\n    if (_rgb == null) {\n      return color;\n    } else {\n      return \"rgba(\" + _rgb.r + \",\" + _rgb.g + \",\" + _rgb.b + \",\" + opacity + \")\";\n    }\n  }\n}\n/**\r\n * Convert RGB \\<0, 255\\> into hex color string.\r\n *\r\n * @param red - Red channel.\r\n * @param green - Green channel.\r\n * @param blue - Blue channel.\r\n *\r\n * @returns Hex color string (for example: '#0acdc0').\r\n */\nfunction RGBToHex(red, green, blue) {\n  return \"#\" + ((1 << 24) + (red << 16) + (green << 8) + blue).toString(16).slice(1);\n}\n/**\r\n * Parse a color property into an object with border, background, and highlight colors.\r\n *\r\n * @param inputColor - Shorthand color string or input color object.\r\n * @param defaultColor - Full color object to fill in missing values in inputColor.\r\n *\r\n * @returns Color object.\r\n */\nfunction parseColor(inputColor, defaultColor) {\n  if (isString(inputColor)) {\n    var colorStr = inputColor;\n    if (isValidRGB(colorStr)) {\n      var rgb = colorStr.substr(4).substr(0, colorStr.length - 5).split(\",\").map(function (value) {\n        return parseInt(value);\n      });\n      colorStr = RGBToHex(rgb[0], rgb[1], rgb[2]);\n    }\n    if (isValidHex(colorStr) === true) {\n      var hsv = hexToHSV(colorStr);\n      var lighterColorHSV = {\n        h: hsv.h,\n        s: hsv.s * 0.8,\n        v: Math.min(1, hsv.v * 1.02)\n      };\n      var darkerColorHSV = {\n        h: hsv.h,\n        s: Math.min(1, hsv.s * 1.25),\n        v: hsv.v * 0.8\n      };\n      var darkerColorHex = HSVToHex(darkerColorHSV.h, darkerColorHSV.s, darkerColorHSV.v);\n      var lighterColorHex = HSVToHex(lighterColorHSV.h, lighterColorHSV.s, lighterColorHSV.v);\n      return {\n        background: colorStr,\n        border: darkerColorHex,\n        highlight: {\n          background: lighterColorHex,\n          border: darkerColorHex\n        },\n        hover: {\n          background: lighterColorHex,\n          border: darkerColorHex\n        }\n      };\n    } else {\n      return {\n        background: colorStr,\n        border: colorStr,\n        highlight: {\n          background: colorStr,\n          border: colorStr\n        },\n        hover: {\n          background: colorStr,\n          border: colorStr\n        }\n      };\n    }\n  } else {\n    if (defaultColor) {\n      var color = {\n        background: inputColor.background || defaultColor.background,\n        border: inputColor.border || defaultColor.border,\n        highlight: isString(inputColor.highlight) ? {\n          border: inputColor.highlight,\n          background: inputColor.highlight\n        } : {\n          background: inputColor.highlight && inputColor.highlight.background || defaultColor.highlight.background,\n          border: inputColor.highlight && inputColor.highlight.border || defaultColor.highlight.border\n        },\n        hover: isString(inputColor.hover) ? {\n          border: inputColor.hover,\n          background: inputColor.hover\n        } : {\n          border: inputColor.hover && inputColor.hover.border || defaultColor.hover.border,\n          background: inputColor.hover && inputColor.hover.background || defaultColor.hover.background\n        }\n      };\n      return color;\n    } else {\n      var _color = {\n        background: inputColor.background || undefined,\n        border: inputColor.border || undefined,\n        highlight: isString(inputColor.highlight) ? {\n          border: inputColor.highlight,\n          background: inputColor.highlight\n        } : {\n          background: inputColor.highlight && inputColor.highlight.background || undefined,\n          border: inputColor.highlight && inputColor.highlight.border || undefined\n        },\n        hover: isString(inputColor.hover) ? {\n          border: inputColor.hover,\n          background: inputColor.hover\n        } : {\n          border: inputColor.hover && inputColor.hover.border || undefined,\n          background: inputColor.hover && inputColor.hover.background || undefined\n        }\n      };\n      return _color;\n    }\n  }\n}\n/**\r\n * Convert RGB \\<0, 255\\> into HSV object.\r\n *\r\n * @remarks\r\n * {@link http://www.javascripter.net/faq/rgb2hsv.htm}\r\n *\r\n * @param red - Red channel.\r\n * @param green - Green channel.\r\n * @param blue - Blue channel.\r\n *\r\n * @returns HSV color object.\r\n */\nfunction RGBToHSV(red, green, blue) {\n  red = red / 255;\n  green = green / 255;\n  blue = blue / 255;\n  var minRGB = Math.min(red, Math.min(green, blue));\n  var maxRGB = Math.max(red, Math.max(green, blue));\n  // Black-gray-white\n  if (minRGB === maxRGB) {\n    return {\n      h: 0,\n      s: 0,\n      v: minRGB\n    };\n  }\n  // Colors other than black-gray-white:\n  var d = red === minRGB ? green - blue : blue === minRGB ? red - green : blue - red;\n  var h = red === minRGB ? 3 : blue === minRGB ? 1 : 5;\n  var hue = 60 * (h - d / (maxRGB - minRGB)) / 360;\n  var saturation = (maxRGB - minRGB) / maxRGB;\n  var value = maxRGB;\n  return {\n    h: hue,\n    s: saturation,\n    v: value\n  };\n}\nvar cssUtil = {\n  // split a string with css styles into an object with key/values\n  split: function split(cssText) {\n    var styles = {};\n    cssText.split(\";\").forEach(function (style) {\n      if (style.trim() != \"\") {\n        var parts = style.split(\":\");\n        var key = parts[0].trim();\n        var value = parts[1].trim();\n        styles[key] = value;\n      }\n    });\n    return styles;\n  },\n  // build a css text string from an object with key/values\n  join: function join(styles) {\n    return Object.keys(styles).map(function (key) {\n      return key + \": \" + styles[key];\n    }).join(\"; \");\n  }\n};\n/**\r\n * Append a string with css styles to an element.\r\n *\r\n * @param element - The element that will receive new styles.\r\n * @param cssText - The styles to be appended.\r\n */\nfunction addCssText(element, cssText) {\n  var currentStyles = cssUtil.split(element.style.cssText);\n  var newStyles = cssUtil.split(cssText);\n  var styles = _objectSpread(_objectSpread({}, currentStyles), newStyles);\n  element.style.cssText = cssUtil.join(styles);\n}\n/**\r\n * Remove a string with css styles from an element.\r\n *\r\n * @param element - The element from which styles should be removed.\r\n * @param cssText - The styles to be removed.\r\n */\nfunction removeCssText(element, cssText) {\n  var styles = cssUtil.split(element.style.cssText);\n  var removeStyles = cssUtil.split(cssText);\n  for (var key in removeStyles) {\n    if (Object.prototype.hasOwnProperty.call(removeStyles, key)) {\n      delete styles[key];\n    }\n  }\n  element.style.cssText = cssUtil.join(styles);\n}\n/**\r\n * Convert HSV \\<0, 1\\> into RGB color object.\r\n *\r\n * @remarks\r\n * {@link https://gist.github.com/mjijackson/5311256}\r\n *\r\n * @param h - Hue.\r\n * @param s - Saturation.\r\n * @param v - Value.\r\n *\r\n * @returns RGB color object.\r\n */\nfunction HSVToRGB(h, s, v) {\n  var r;\n  var g;\n  var b;\n  var i = Math.floor(h * 6);\n  var f = h * 6 - i;\n  var p = v * (1 - s);\n  var q = v * (1 - f * s);\n  var t = v * (1 - (1 - f) * s);\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p;\n      break;\n    case 1:\n      r = q, g = v, b = p;\n      break;\n    case 2:\n      r = p, g = v, b = t;\n      break;\n    case 3:\n      r = p, g = q, b = v;\n      break;\n    case 4:\n      r = t, g = p, b = v;\n      break;\n    case 5:\n      r = v, g = p, b = q;\n      break;\n  }\n  return {\n    r: Math.floor(r * 255),\n    g: Math.floor(g * 255),\n    b: Math.floor(b * 255)\n  };\n}\n/**\r\n * Convert HSV \\<0, 1\\> into hex color string.\r\n *\r\n * @param h - Hue.\r\n * @param s - Saturation.\r\n * @param v - Value.\r\n *\r\n * @returns Hex color string.\r\n */\nfunction HSVToHex(h, s, v) {\n  var rgb = HSVToRGB(h, s, v);\n  return RGBToHex(rgb.r, rgb.g, rgb.b);\n}\n/**\r\n * Convert hex color string into HSV \\<0, 1\\>.\r\n *\r\n * @param hex - Hex color string.\r\n *\r\n * @returns HSV color object.\r\n */\nfunction hexToHSV(hex) {\n  var rgb = hexToRGB(hex);\n  if (!rgb) {\n    throw new TypeError(\"'\".concat(hex, \"' is not a valid color.\"));\n  }\n  return RGBToHSV(rgb.r, rgb.g, rgb.b);\n}\n/**\r\n * Validate hex color string.\r\n *\r\n * @param hex - Unknown string that may contain a color.\r\n *\r\n * @returns True if the string is valid, false otherwise.\r\n */\nfunction isValidHex(hex) {\n  var isOk = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(hex);\n  return isOk;\n}\n/**\r\n * Validate RGB color string.\r\n *\r\n * @param rgb - Unknown string that may contain a color.\r\n *\r\n * @returns True if the string is valid, false otherwise.\r\n */\nfunction isValidRGB(rgb) {\n  return rgbRE.test(rgb);\n}\n/**\r\n * Validate RGBA color string.\r\n *\r\n * @param rgba - Unknown string that may contain a color.\r\n *\r\n * @returns True if the string is valid, false otherwise.\r\n */\nfunction isValidRGBA(rgba) {\n  return rgbaRE.test(rgba);\n}\n/**\r\n * This recursively redirects the prototype of JSON objects to the referenceObject.\r\n * This is used for default options.\r\n *\r\n * @param fields - Names of properties to be bridged.\r\n * @param referenceObject - The original object.\r\n *\r\n * @returns A new object inheriting from the referenceObject.\r\n */\nfunction selectiveBridgeObject(fields, referenceObject) {\n  if (referenceObject !== null && typeof referenceObject === \"object\") {\n    // !!! typeof null === 'object'\n    var objectTo = Object.create(referenceObject);\n    for (var i = 0; i < fields.length; i++) {\n      if (Object.prototype.hasOwnProperty.call(referenceObject, fields[i])) {\n        if (typeof referenceObject[fields[i]] == \"object\") {\n          objectTo[fields[i]] = bridgeObject(referenceObject[fields[i]]);\n        }\n      }\n    }\n    return objectTo;\n  } else {\n    return null;\n  }\n}\n/**\r\n * This recursively redirects the prototype of JSON objects to the referenceObject.\r\n * This is used for default options.\r\n *\r\n * @param referenceObject - The original object.\r\n *\r\n * @returns The Element if the referenceObject is an Element, or a new object inheriting from the referenceObject.\r\n */\nfunction bridgeObject(referenceObject) {\n  if (referenceObject === null || typeof referenceObject !== \"object\") {\n    return null;\n  }\n  if (referenceObject instanceof Element) {\n    // Avoid bridging DOM objects\n    return referenceObject;\n  }\n  var objectTo = Object.create(referenceObject);\n  for (var i in referenceObject) {\n    if (Object.prototype.hasOwnProperty.call(referenceObject, i)) {\n      if (typeof referenceObject[i] == \"object\") {\n        objectTo[i] = bridgeObject(referenceObject[i]);\n      }\n    }\n  }\n  return objectTo;\n}\n/**\r\n * This method provides a stable sort implementation, very fast for presorted data.\r\n *\r\n * @param a - The array to be sorted (in-place).\r\n * @param compare - An order comparator.\r\n *\r\n * @returns The argument a.\r\n */\nfunction insertSort(a, compare) {\n  for (var i = 0; i < a.length; i++) {\n    var k = a[i];\n    var j = void 0;\n    for (j = i; j > 0 && compare(k, a[j - 1]) < 0; j--) {\n      a[j] = a[j - 1];\n    }\n    a[j] = k;\n  }\n  return a;\n}\n/**\r\n * This is used to set the options of subobjects in the options object.\r\n *\r\n * A requirement of these subobjects is that they have an 'enabled' element\r\n * which is optional for the user but mandatory for the program.\r\n *\r\n * The added value here of the merge is that option 'enabled' is set as required.\r\n *\r\n * @param mergeTarget - Either this.options or the options used for the groups.\r\n * @param options - Options.\r\n * @param option - Option key in the options argument.\r\n * @param globalOptions - Global options, passed in to determine value of option 'enabled'.\r\n */\nfunction mergeOptions(mergeTarget, options, option) {\n  var globalOptions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  // Local helpers\n  var isPresent = function isPresent(obj) {\n    return obj !== null && obj !== undefined;\n  };\n  var isObject = function isObject(obj) {\n    return obj !== null && typeof obj === \"object\";\n  };\n  // https://stackoverflow.com/a/34491287/1223531\n  var isEmpty = function isEmpty(obj) {\n    for (var x in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, x)) {\n        return false;\n      }\n    }\n    return true;\n  };\n  // Guards\n  if (!isObject(mergeTarget)) {\n    throw new Error(\"Parameter mergeTarget must be an object\");\n  }\n  if (!isObject(options)) {\n    throw new Error(\"Parameter options must be an object\");\n  }\n  if (!isPresent(option)) {\n    throw new Error(\"Parameter option must have a value\");\n  }\n  if (!isObject(globalOptions)) {\n    throw new Error(\"Parameter globalOptions must be an object\");\n  }\n  //\n  // Actual merge routine, separated from main logic\n  // Only a single level of options is merged. Deeper levels are ref'd. This may actually be an issue.\n  //\n  var doMerge = function doMerge(target, options, option) {\n    if (!isObject(target[option])) {\n      target[option] = {};\n    }\n    var src = options[option];\n    var dst = target[option];\n    for (var prop in src) {\n      if (Object.prototype.hasOwnProperty.call(src, prop)) {\n        dst[prop] = src[prop];\n      }\n    }\n  };\n  // Local initialization\n  var srcOption = options[option];\n  var globalPassed = isObject(globalOptions) && !isEmpty(globalOptions);\n  var globalOption = globalPassed ? globalOptions[option] : undefined;\n  var globalEnabled = globalOption ? globalOption.enabled : undefined;\n  /////////////////////////////////////////\n  // Main routine\n  /////////////////////////////////////////\n  if (srcOption === undefined) {\n    return; // Nothing to do\n  }\n\n  if (typeof srcOption === \"boolean\") {\n    if (!isObject(mergeTarget[option])) {\n      mergeTarget[option] = {};\n    }\n    mergeTarget[option].enabled = srcOption;\n    return;\n  }\n  if (srcOption === null && !isObject(mergeTarget[option])) {\n    // If possible, explicit copy from globals\n    if (isPresent(globalOption)) {\n      mergeTarget[option] = Object.create(globalOption);\n    } else {\n      return; // Nothing to do\n    }\n  }\n\n  if (!isObject(srcOption)) {\n    return;\n  }\n  //\n  // Ensure that 'enabled' is properly set. It is required internally\n  // Note that the value from options will always overwrite the existing value\n  //\n  var enabled = true; // default value\n  if (srcOption.enabled !== undefined) {\n    enabled = srcOption.enabled;\n  } else {\n    // Take from globals, if present\n    if (globalEnabled !== undefined) {\n      enabled = globalOption.enabled;\n    }\n  }\n  doMerge(mergeTarget, options, option);\n  mergeTarget[option].enabled = enabled;\n}\n/**\r\n * This function does a binary search for a visible item in a sorted list. If we find a visible item, the code that uses\r\n * this function will then iterate in both directions over this sorted list to find all visible items.\r\n *\r\n * @param orderedItems - Items ordered by start.\r\n * @param comparator - -1 is lower, 0 is equal, 1 is higher.\r\n * @param field - Property name on an item (That is item[field]).\r\n * @param field2 - Second property name on an item (That is item[field][field2]).\r\n *\r\n * @returns Index of the found item or -1 if nothing was found.\r\n */\nfunction binarySearchCustom(orderedItems, comparator, field, field2) {\n  var maxIterations = 10000;\n  var iteration = 0;\n  var low = 0;\n  var high = orderedItems.length - 1;\n  while (low <= high && iteration < maxIterations) {\n    var middle = Math.floor((low + high) / 2);\n    var item = orderedItems[middle];\n    var value = field2 === undefined ? item[field] : item[field][field2];\n    var searchResult = comparator(value);\n    if (searchResult == 0) {\n      // jihaa, found a visible item!\n      return middle;\n    } else if (searchResult == -1) {\n      // it is too small --> increase low\n      low = middle + 1;\n    } else {\n      // it is too big --> decrease high\n      high = middle - 1;\n    }\n    iteration++;\n  }\n  return -1;\n}\n/**\r\n * This function does a binary search for a specific value in a sorted array.\r\n * If it does not exist but is in between of two values, we return either the\r\n * one before or the one after, depending on user input If it is found, we\r\n * return the index, else -1.\r\n *\r\n * @param orderedItems - Sorted array.\r\n * @param target - The searched value.\r\n * @param field - Name of the property in items to be searched.\r\n * @param sidePreference - If the target is between two values, should the index of the before or the after be returned?\r\n * @param comparator - An optional comparator, returning -1, 0, 1 for \\<, ===, \\>.\r\n *\r\n * @returns The index of found value or -1 if nothing was found.\r\n */\nfunction binarySearchValue(orderedItems, target, field, sidePreference, comparator) {\n  var maxIterations = 10000;\n  var iteration = 0;\n  var low = 0;\n  var high = orderedItems.length - 1;\n  var prevValue;\n  var value;\n  var nextValue;\n  var middle;\n  comparator = comparator != undefined ? comparator : function (a, b) {\n    return a == b ? 0 : a < b ? -1 : 1;\n  };\n  while (low <= high && iteration < maxIterations) {\n    // get a new guess\n    middle = Math.floor(0.5 * (high + low));\n    prevValue = orderedItems[Math.max(0, middle - 1)][field];\n    value = orderedItems[middle][field];\n    nextValue = orderedItems[Math.min(orderedItems.length - 1, middle + 1)][field];\n    if (comparator(value, target) == 0) {\n      // we found the target\n      return middle;\n    } else if (comparator(prevValue, target) < 0 && comparator(value, target) > 0) {\n      // target is in between of the previous and the current\n      return sidePreference == \"before\" ? Math.max(0, middle - 1) : middle;\n    } else if (comparator(value, target) < 0 && comparator(nextValue, target) > 0) {\n      // target is in between of the current and the next\n      return sidePreference == \"before\" ? middle : Math.min(orderedItems.length - 1, middle + 1);\n    } else {\n      // didnt find the target, we need to change our boundaries.\n      if (comparator(value, target) < 0) {\n        // it is too small --> increase low\n        low = middle + 1;\n      } else {\n        // it is too big --> decrease high\n        high = middle - 1;\n      }\n    }\n    iteration++;\n  }\n  // didnt find anything. Return -1.\n  return -1;\n}\n/*\r\n * Easing Functions.\r\n * Only considering the t value for the range [0, 1] => [0, 1].\r\n *\r\n * Inspiration: from http://gizma.com/easing/\r\n * https://gist.github.com/gre/1650294\r\n */\nvar easingFunctions = {\n  /**\r\n   * Provides no easing and no acceleration.\r\n   *\r\n   * @param t - Time.\r\n   *\r\n   * @returns Value at time t.\r\n   */\n  linear: function linear(t) {\n    return t;\n  },\n  /**\r\n   * Accelerate from zero velocity.\r\n   *\r\n   * @param t - Time.\r\n   *\r\n   * @returns Value at time t.\r\n   */\n  easeInQuad: function easeInQuad(t) {\n    return t * t;\n  },\n  /**\r\n   * Decelerate to zero velocity.\r\n   *\r\n   * @param t - Time.\r\n   *\r\n   * @returns Value at time t.\r\n   */\n  easeOutQuad: function easeOutQuad(t) {\n    return t * (2 - t);\n  },\n  /**\r\n   * Accelerate until halfway, then decelerate.\r\n   *\r\n   * @param t - Time.\r\n   *\r\n   * @returns Value at time t.\r\n   */\n  easeInOutQuad: function easeInOutQuad(t) {\n    return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n  },\n  /**\r\n   * Accelerate from zero velocity.\r\n   *\r\n   * @param t - Time.\r\n   *\r\n   * @returns Value at time t.\r\n   */\n  easeInCubic: function easeInCubic(t) {\n    return t * t * t;\n  },\n  /**\r\n   * Decelerate to zero velocity.\r\n   *\r\n   * @param t - Time.\r\n   *\r\n   * @returns Value at time t.\r\n   */\n  easeOutCubic: function easeOutCubic(t) {\n    return --t * t * t + 1;\n  },\n  /**\r\n   * Accelerate until halfway, then decelerate.\r\n   *\r\n   * @param t - Time.\r\n   *\r\n   * @returns Value at time t.\r\n   */\n  easeInOutCubic: function easeInOutCubic(t) {\n    return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n  },\n  /**\r\n   * Accelerate from zero velocity.\r\n   *\r\n   * @param t - Time.\r\n   *\r\n   * @returns Value at time t.\r\n   */\n  easeInQuart: function easeInQuart(t) {\n    return t * t * t * t;\n  },\n  /**\r\n   * Decelerate to zero velocity.\r\n   *\r\n   * @param t - Time.\r\n   *\r\n   * @returns Value at time t.\r\n   */\n  easeOutQuart: function easeOutQuart(t) {\n    return 1 - --t * t * t * t;\n  },\n  /**\r\n   * Accelerate until halfway, then decelerate.\r\n   *\r\n   * @param t - Time.\r\n   *\r\n   * @returns Value at time t.\r\n   */\n  easeInOutQuart: function easeInOutQuart(t) {\n    return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n  },\n  /**\r\n   * Accelerate from zero velocity.\r\n   *\r\n   * @param t - Time.\r\n   *\r\n   * @returns Value at time t.\r\n   */\n  easeInQuint: function easeInQuint(t) {\n    return t * t * t * t * t;\n  },\n  /**\r\n   * Decelerate to zero velocity.\r\n   *\r\n   * @param t - Time.\r\n   *\r\n   * @returns Value at time t.\r\n   */\n  easeOutQuint: function easeOutQuint(t) {\n    return 1 + --t * t * t * t * t;\n  },\n  /**\r\n   * Accelerate until halfway, then decelerate.\r\n   *\r\n   * @param t - Time.\r\n   *\r\n   * @returns Value at time t.\r\n   */\n  easeInOutQuint: function easeInOutQuint(t) {\n    return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n  }\n};\n/**\r\n * Experimentaly compute the width of the scrollbar for this browser.\r\n *\r\n * @returns The width in pixels.\r\n */\nfunction getScrollBarWidth() {\n  var inner = document.createElement(\"p\");\n  inner.style.width = \"100%\";\n  inner.style.height = \"200px\";\n  var outer = document.createElement(\"div\");\n  outer.style.position = \"absolute\";\n  outer.style.top = \"0px\";\n  outer.style.left = \"0px\";\n  outer.style.visibility = \"hidden\";\n  outer.style.width = \"200px\";\n  outer.style.height = \"150px\";\n  outer.style.overflow = \"hidden\";\n  outer.appendChild(inner);\n  document.body.appendChild(outer);\n  var w1 = inner.offsetWidth;\n  outer.style.overflow = \"scroll\";\n  var w2 = inner.offsetWidth;\n  if (w1 == w2) {\n    w2 = outer.clientWidth;\n  }\n  document.body.removeChild(outer);\n  return w1 - w2;\n}\n// @TODO: This doesn't work properly.\n// It works only for single property objects,\n// otherwise it combines all of the types in a union.\n// export function topMost<K1 extends string, V1> (\n//   pile: Record<K1, undefined | V1>[],\n//   accessors: K1 | [K1]\n// ): undefined | V1\n// export function topMost<K1 extends string, K2 extends string, V1, V2> (\n//   pile: Record<K1, undefined | V1 | Record<K2, undefined | V2>>[],\n//   accessors: [K1, K2]\n// ): undefined | V1 | V2\n// export function topMost<K1 extends string, K2 extends string, K3 extends string, V1, V2, V3> (\n//   pile: Record<K1, undefined | V1 | Record<K2, undefined | V2 | Record<K3, undefined | V3>>>[],\n//   accessors: [K1, K2, K3]\n// ): undefined | V1 | V2 | V3\n/**\r\n * Get the top most property value from a pile of objects.\r\n *\r\n * @param pile - Array of objects, no required format.\r\n * @param accessors - Array of property names.\r\n * For example `object['foo']['bar']` → `['foo', 'bar']`.\r\n *\r\n * @returns Value of the property with given accessors path from the first pile item where it's not undefined.\r\n */\nfunction topMost(pile, accessors) {\n  var candidate;\n  if (!Array.isArray(accessors)) {\n    accessors = [accessors];\n  }\n  var _iterator2 = _createForOfIteratorHelper(pile),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var member = _step2.value;\n      if (member) {\n        candidate = member[accessors[0]];\n        for (var i = 1; i < accessors.length; i++) {\n          if (candidate) {\n            candidate = candidate[accessors[i]];\n          }\n        }\n        if (typeof candidate !== \"undefined\") {\n          break;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return candidate;\n}\nexport { Alea, DELETE, HSVToHex, HSVToRGB, RGBToHSV, RGBToHex, addClassName, addCssText, addEventListener, binarySearchCustom, binarySearchValue, bridgeObject, copyAndExtendArray, copyArray, deepExtend, deepObjectAssign, easingFunctions, equalArray, extend, fillIfDefined, forEach, getAbsoluteLeft, getAbsoluteRight, getAbsoluteTop, getScrollBarWidth, getTarget, getType, hasParent, hexToHSV, hexToRGB, insertSort, isDate, isNumber, isObject, isString, isValidHex, isValidRGB, isValidRGBA, mergeOptions, option, overrideOpacity, parseColor, preventDefault, pureDeepObjectAssign, recursiveDOMDelete, removeClassName, removeCssText, removeEventListener, selectiveBridgeObject, selectiveDeepExtend, selectiveExtend, selectiveNotDeepExtend, throttle, toArray, topMost, updateProperty };","map":{"version":3,"names":["DELETE","Symbol","pureDeepObjectAssign","base","_len","arguments","length","updates","Array","_key","deepObjectAssign","apply","concat","merged","deepObjectAssignNonentry","stripDelete","_len2","values","_key2","_toConsumableArray","slice","a","b","_iterator","_createForOfIteratorHelper","Reflect","ownKeys","_step","s","n","done","prop","value","Object","prototype","propertyIsEnumerable","call","isArray","clone","err","e","f","map","_i","_Object$keys","keys","Alea","_len3","seed","_key3","AleaImplementation","Date","now","_mashSeed","mashSeed","_mashSeed2","_slicedToArray","s0","s1","s2","c","random","t","uint32","fract53","algorithm","version","mash","Mash","i","undefined","data","string","toString","charCodeAt","h","ASPDateRegex","fullHexRE","shortHexRE","rgbRE","rgbaRE","isNumber","Number","recursiveDOMDelete","DOMobject","hasChildNodes","child","firstChild","removeChild","isString","String","isObject","isDate","match","exec","isNaN","parse","copyOrDelete","allowDeletion","doDeletion","fillIfDefined","aProp","bProp","extend","assign","selectiveExtend","props","Error","_len4","others","_key4","_i2","_others","other","p","hasOwnProperty","selectiveDeepExtend","TypeError","constructor","deepExtend","selectiveNotDeepExtend","propsToExclude","indexOf","push","protoExtend","getPrototypeOf","equalArray","len","getType","object","type","Boolean","copyAndExtendArray","arr","newValue","copyArray","getAbsoluteLeft","elem","getBoundingClientRect","left","getAbsoluteRight","right","getAbsoluteTop","top","addClassName","classNames","classes","className","split","newClasses","filter","join","removeClassName","oldClasses","forEach","callback","key","toArray","updateProperty","throttle","fn","scheduled","requestAnimationFrame","addEventListener","element","action","listener","useCapture","navigator","userAgent","attachEvent","removeEventListener","detachEvent","preventDefault","event","window","returnValue","getTarget","target","srcElement","Element","nodeType","parentNode","hasParent","parent","option","asBoolean","defaultValue","asNumber","asString","asSize","asElement","hexToRGB","hex","result","r","parseInt","g","overrideOpacity","color","opacity","rgb","substr","replace","RGBToHex","red","green","blue","parseColor","inputColor","defaultColor","colorStr","isValidRGB","isValidHex","hsv","hexToHSV","lighterColorHSV","v","Math","min","darkerColorHSV","darkerColorHex","HSVToHex","lighterColorHex","background","border","highlight","hover","RGBToHSV","minRGB","maxRGB","max","d","hue","saturation","cssUtil","cssText","styles","style","trim","parts","addCssText","currentStyles","newStyles","_objectSpread","removeCssText","removeStyles","HSVToRGB","floor","q","isOk","test","isValidRGBA","rgba","selectiveBridgeObject","fields","referenceObject","objectTo","create","bridgeObject","insertSort","compare","k","j","mergeOptions","mergeTarget","options","globalOptions","isPresent","obj","isEmpty","x","doMerge","src","dst","srcOption","globalPassed","globalOption","globalEnabled","enabled","binarySearchCustom","orderedItems","comparator","field","field2","maxIterations","iteration","low","high","middle","item","searchResult","binarySearchValue","sidePreference","prevValue","nextValue","easingFunctions","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","getScrollBarWidth","inner","document","createElement","width","height","outer","position","visibility","overflow","appendChild","body","w1","offsetWidth","w2","clientWidth","topMost","pile","accessors","candidate","_iterator2","_step2","member"],"sources":["E:\\ELSY Practice\\react\\node_modules\\vis-util\\src\\deep-object-assign.ts","E:\\ELSY Practice\\react\\node_modules\\vis-util\\src\\random\\alea.ts","E:\\ELSY Practice\\react\\node_modules\\vis-util\\src\\util.ts"],"sourcesContent":["/**\n * Use this symbol to delete properies in deepObjectAssign.\n */\nexport const DELETE = Symbol(\"DELETE\");\n\n/**\n * Turns `undefined` into `undefined | typeof DELETE` and makes everything\n * partial. Intended to be used with `deepObjectAssign`.\n */\nexport type Assignable<T> = T extends undefined\n  ?\n      | (T extends Function\n          ? T\n          : T extends object\n          ? { [Key in keyof T]?: Assignable<T[Key]> | undefined }\n          : T)\n      | typeof DELETE\n  : T extends Function\n  ? T | undefined\n  : T extends object\n  ? { [Key in keyof T]?: Assignable<T[Key]> | undefined }\n  : T | undefined;\n\n/**\n * Pure version of deepObjectAssign, it doesn't modify any of it's arguments.\n *\n * @param base - The base object that fullfils the whole interface T.\n * @param updates - Updates that may change or delete props.\n *\n * @returns A brand new instance with all the supplied objects deeply merged.\n */\nexport function pureDeepObjectAssign<T>(\n  base: T,\n  ...updates: Assignable<T>[]\n): T {\n  return deepObjectAssign({} as any, base, ...updates);\n}\n\n/**\n * Deep version of object assign with additional deleting by the DELETE symbol.\n *\n * @param target - The object that will be augmented using the sources.\n * @param sources - Objects to be deeply merged into the target.\n *\n * @returns The target (same instance).\n */\nexport function deepObjectAssign<T>(target: T, ...sources: Assignable<T>[]): T;\n/**\n * Deep version of object assign with additional deleting by the DELETE symbol.\n *\n * @param values - Objects to be deeply merged.\n *\n * @returns The first object from values.\n */\nexport function deepObjectAssign(...values: readonly any[]): any {\n  const merged = deepObjectAssignNonentry(...values);\n  stripDelete(merged);\n  return merged;\n}\n\n/**\n * Deep version of object assign with additional deleting by the DELETE symbol.\n *\n * @remarks\n * This doesn't strip the DELETE symbols so they may end up in the final object.\n *\n * @param values - Objects to be deeply merged.\n *\n * @returns The first object from values.\n */\nfunction deepObjectAssignNonentry(...values: readonly any[]): any {\n  if (values.length < 2) {\n    return values[0];\n  } else if (values.length > 2) {\n    return deepObjectAssignNonentry(\n      deepObjectAssign(values[0], values[1]),\n      ...values.slice(2)\n    );\n  }\n\n  const a = values[0];\n  const b = values[1];\n\n  for (const prop of Reflect.ownKeys(b)) {\n    if (!Object.prototype.propertyIsEnumerable.call(b, prop)) {\n      // Ignore nonenumerable props, Object.assign() would do the same.\n    } else if (b[prop] === DELETE) {\n      delete a[prop];\n    } else if (\n      a[prop] !== null &&\n      b[prop] !== null &&\n      typeof a[prop] === \"object\" &&\n      typeof b[prop] === \"object\" &&\n      !Array.isArray(a[prop]) &&\n      !Array.isArray(b[prop])\n    ) {\n      a[prop] = deepObjectAssignNonentry(a[prop], b[prop]);\n    } else {\n      a[prop] = clone(b[prop]);\n    }\n  }\n\n  return a;\n}\n\n/**\n * Deep clone given object or array. In case of primitive simply return.\n *\n * @param a - Anything.\n *\n * @returns Deep cloned object/array or unchanged a.\n */\nfunction clone(a: any): any {\n  if (Array.isArray(a)) {\n    return a.map((value: any): any => clone(value));\n  } else if (typeof a === \"object\" && a !== null) {\n    return deepObjectAssignNonentry({}, a);\n  } else {\n    return a;\n  }\n}\n\n/**\n * Strip DELETE from given object.\n *\n * @param a - Object which may contain DELETE but won't after this is executed.\n */\nfunction stripDelete(a: any): void {\n  for (const prop of Object.keys(a)) {\n    if (a[prop] === DELETE) {\n      delete a[prop];\n    } else if (typeof a[prop] === \"object\" && a[prop] !== null) {\n      stripDelete(a[prop]);\n    }\n  }\n}\n","/**\n * Seedable, fast and reasonably good (not crypto but more than okay for our\n * needs) random number generator.\n *\n * @remarks\n * Adapted from {@link https://web.archive.org/web/20110429100736/http://baagoe.com:80/en/RandomMusings/javascript}.\n * Original algorithm created by Johannes Baagøe \\<baagoe\\@baagoe.com\\> in 2010.\n */\n\n/**\n * Random number generator.\n */\nexport interface RNG {\n  /** Returns \\<0, 1). Faster than [[fract53]]. */\n  (): number;\n  /** Returns \\<0, 1). Provides more precise data. */\n  fract53(): number;\n  /** Returns \\<0, 2^32). */\n  uint32(): number;\n\n  /** The algorithm gehind this instance. */\n  algorithm: string;\n  /** The seed used to seed this instance. */\n  seed: Mashable[];\n  /** The version of this instance. */\n  version: string;\n}\n\n/**\n * Create a seeded pseudo random generator based on Alea by Johannes Baagøe.\n *\n * @param seed - All supplied arguments will be used as a seed. In case nothing\n * is supplied the current time will be used to seed the generator.\n *\n * @returns A ready to use seeded generator.\n */\nexport function Alea(...seed: Mashable[]): RNG {\n  return AleaImplementation(seed.length ? seed : [Date.now()]);\n}\n\n/**\n * An implementation of [[Alea]] without user input validation.\n *\n * @param seed - The data that will be used to seed the generator.\n *\n * @returns A ready to use seeded generator.\n */\nfunction AleaImplementation(seed: Mashable[]): RNG {\n  let [s0, s1, s2] = mashSeed(seed);\n  let c = 1;\n\n  const random: RNG = (): number => {\n    const t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n    s0 = s1;\n    s1 = s2;\n    return (s2 = t - (c = t | 0));\n  };\n\n  random.uint32 = (): number => random() * 0x100000000; // 2^32\n\n  random.fract53 = (): number =>\n    random() + ((random() * 0x200000) | 0) * 1.1102230246251565e-16; // 2^-53\n\n  random.algorithm = \"Alea\";\n  random.seed = seed;\n  random.version = \"0.9\";\n\n  return random;\n}\n\n/**\n * Turn arbitrary data into values [[AleaImplementation]] can use to generate\n * random numbers.\n *\n * @param seed - Arbitrary data that will be used as the seed.\n *\n * @returns Three numbers to use as initial values for [[AleaImplementation]].\n */\nfunction mashSeed(...seed: Mashable[]): [number, number, number] {\n  const mash = Mash();\n\n  let s0 = mash(\" \");\n  let s1 = mash(\" \");\n  let s2 = mash(\" \");\n\n  for (let i = 0; i < seed.length; i++) {\n    s0 -= mash(seed[i]);\n    if (s0 < 0) {\n      s0 += 1;\n    }\n    s1 -= mash(seed[i]);\n    if (s1 < 0) {\n      s1 += 1;\n    }\n    s2 -= mash(seed[i]);\n    if (s2 < 0) {\n      s2 += 1;\n    }\n  }\n\n  return [s0, s1, s2];\n}\n\n/**\n * Values of these types can be used as a seed.\n */\nexport type Mashable = number | string | boolean | object | bigint;\n\n/**\n * Create a new mash function.\n *\n * @returns A nonpure function that takes arbitrary [[Mashable]] data and turns\n * them into numbers.\n */\nfunction Mash(): (data: Mashable) => number {\n  let n = 0xefc8249d;\n\n  return function (data): number {\n    const string = data.toString();\n    for (let i = 0; i < string.length; i++) {\n      n += string.charCodeAt(i);\n      let h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n}\n","// utility functions\n\n// parse ASP.Net Date pattern,\n// for example '/Date(1198908717056)/' or '/Date(1198908717056-0700)/'\n// code from http://momentjs.com/\nconst ASPDateRegex = /^\\/?Date\\((-?\\d+)/i;\n\n// Color REs\nconst fullHexRE = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\nconst shortHexRE = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\nconst rgbRE = /^rgb\\( *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *, *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *, *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *\\)$/i;\nconst rgbaRE = /^rgba\\( *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *, *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *, *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *, *([01]|0?\\.\\d+) *\\)$/i;\n\n/**\n * Hue, Saturation, Value.\n */\nexport interface HSV {\n  /**\n   * Hue \\<0, 1\\>.\n   */\n  h: number;\n  /**\n   * Saturation \\<0, 1\\>.\n   */\n  s: number;\n  /**\n   * Value \\<0, 1\\>.\n   */\n  v: number;\n}\n\n/**\n * Red, Green, Blue.\n */\nexport interface RGB {\n  /**\n   * Red \\<0, 255\\> integer.\n   */\n  r: number;\n  /**\n   * Green \\<0, 255\\> integer.\n   */\n  g: number;\n  /**\n   * Blue \\<0, 255\\> integer.\n   */\n  b: number;\n}\n\n/**\n * Red, Green, Blue, Alpha.\n */\nexport interface RGBA {\n  /**\n   * Red \\<0, 255\\> integer.\n   */\n  r: number;\n  /**\n   * Green \\<0, 255\\> integer.\n   */\n  g: number;\n  /**\n   * Blue \\<0, 255\\> integer.\n   */\n  b: number;\n  /**\n   * Alpha \\<0, 1\\>.\n   */\n  a: number;\n}\n\n/**\n * Test whether given object is a number.\n *\n * @param value - Input value of unknown type.\n *\n * @returns True if number, false otherwise.\n */\nexport function isNumber(value: unknown): value is number {\n  return value instanceof Number || typeof value === \"number\";\n}\n\n/**\n * Remove everything in the DOM object.\n *\n * @param DOMobject - Node whose child nodes will be recursively deleted.\n */\nexport function recursiveDOMDelete(DOMobject: Node | null | undefined): void {\n  if (DOMobject) {\n    while (DOMobject.hasChildNodes() === true) {\n      const child = DOMobject.firstChild;\n      if (child) {\n        recursiveDOMDelete(child);\n        DOMobject.removeChild(child);\n      }\n    }\n  }\n}\n\n/**\n * Test whether given object is a string.\n *\n * @param value - Input value of unknown type.\n *\n * @returns True if string, false otherwise.\n */\nexport function isString(value: unknown): value is string {\n  return value instanceof String || typeof value === \"string\";\n}\n\n/**\n * Test whether given object is a object (not primitive or null).\n *\n * @param value - Input value of unknown type.\n *\n * @returns True if not null object, false otherwise.\n */\nexport function isObject(value: unknown): value is object {\n  return typeof value === \"object\" && value !== null;\n}\n\n/**\n * Test whether given object is a Date, or a String containing a Date.\n *\n * @param value - Input value of unknown type.\n *\n * @returns True if Date instance or string date representation, false otherwise.\n */\nexport function isDate(value: unknown): value is Date | string {\n  if (value instanceof Date) {\n    return true;\n  } else if (isString(value)) {\n    // test whether this string contains a date\n    const match = ASPDateRegex.exec(value);\n    if (match) {\n      return true;\n    } else if (!isNaN(Date.parse(value))) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Copy property from b to a if property present in a.\n * If property in b explicitly set to null, delete it if `allowDeletion` set.\n *\n * Internal helper routine, should not be exported. Not added to `exports` for that reason.\n *\n * @param a - Target object.\n * @param b - Source object.\n * @param prop - Name of property to copy from b to a.\n * @param allowDeletion - If true, delete property in a if explicitly set to null in b.\n */\nfunction copyOrDelete(\n  a: any,\n  b: any,\n  prop: string,\n  allowDeletion: boolean\n): void {\n  let doDeletion = false;\n  if (allowDeletion === true) {\n    doDeletion = b[prop] === null && a[prop] !== undefined;\n  }\n\n  if (doDeletion) {\n    delete a[prop];\n  } else {\n    a[prop] = b[prop]; // Remember, this is a reference copy!\n  }\n}\n\n/**\n * Fill an object with a possibly partially defined other object.\n *\n * Only copies values for the properties already present in a.\n * That means an object is not created on a property if only the b object has it.\n *\n * @param a - The object that will have it's properties updated.\n * @param b - The object with property updates.\n * @param allowDeletion - If true, delete properties in a that are explicitly set to null in b.\n */\nexport function fillIfDefined<T extends object>(\n  a: T,\n  b: Partial<T>,\n  allowDeletion = false\n): void {\n  // NOTE: iteration of properties of a\n  // NOTE: prototype properties iterated over as well\n  for (const prop in a) {\n    if (b[prop] !== undefined) {\n      if (b[prop] === null || typeof b[prop] !== \"object\") {\n        // Note: typeof null === 'object'\n        copyOrDelete(a, b, prop, allowDeletion);\n      } else {\n        const aProp = a[prop];\n        const bProp = b[prop];\n        if (isObject(aProp) && isObject(bProp)) {\n          fillIfDefined(aProp, bProp, allowDeletion);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Copy the values of all of the enumerable own properties from one or more source objects to a\n * target object. Returns the target object.\n *\n * @param target - The target object to copy to.\n * @param source - The source object from which to copy properties.\n *\n * @returns The target object.\n */\nexport const extend = Object.assign;\n\n/**\n * Extend object a with selected properties of object b or a series of objects.\n *\n * @remarks\n * Only properties with defined values are copied.\n *\n * @param props - Properties to be copied to a.\n * @param a - The target.\n * @param others - The sources.\n *\n * @returns Argument a.\n */\nexport function selectiveExtend(\n  props: string[],\n  a: any,\n  ...others: any[]\n): any {\n  if (!Array.isArray(props)) {\n    throw new Error(\"Array with property names expected as first argument\");\n  }\n\n  for (const other of others) {\n    for (let p = 0; p < props.length; p++) {\n      const prop = props[p];\n      if (other && Object.prototype.hasOwnProperty.call(other, prop)) {\n        a[prop] = other[prop];\n      }\n    }\n  }\n  return a;\n}\n\n/**\n * Extend object a with selected properties of object b.\n * Only properties with defined values are copied.\n *\n * @remarks\n * Previous version of this routine implied that multiple source objects could\n * be used; however, the implementation was **wrong**. Since multiple (\\>1)\n * sources weren't used anywhere in the `vis.js` code, this has been removed\n *\n * @param props - Names of first-level properties to copy over.\n * @param a - Target object.\n * @param b - Source object.\n * @param allowDeletion - If true, delete property in a if explicitly set to null in b.\n *\n * @returns Argument a.\n */\nexport function selectiveDeepExtend(\n  props: string[],\n  a: any,\n  b: any,\n  allowDeletion = false\n): any {\n  // TODO: add support for Arrays to deepExtend\n  if (Array.isArray(b)) {\n    throw new TypeError(\"Arrays are not supported by deepExtend\");\n  }\n\n  for (let p = 0; p < props.length; p++) {\n    const prop = props[p];\n    if (Object.prototype.hasOwnProperty.call(b, prop)) {\n      if (b[prop] && b[prop].constructor === Object) {\n        if (a[prop] === undefined) {\n          a[prop] = {};\n        }\n        if (a[prop].constructor === Object) {\n          deepExtend(a[prop], b[prop], false, allowDeletion);\n        } else {\n          copyOrDelete(a, b, prop, allowDeletion);\n        }\n      } else if (Array.isArray(b[prop])) {\n        throw new TypeError(\"Arrays are not supported by deepExtend\");\n      } else {\n        copyOrDelete(a, b, prop, allowDeletion);\n      }\n    }\n  }\n  return a;\n}\n\n/**\n * Extend object `a` with properties of object `b`, ignoring properties which\n * are explicitly specified to be excluded.\n *\n * @remarks\n * The properties of `b` are considered for copying. Properties which are\n * themselves objects are are also extended. Only properties with defined\n * values are copied.\n *\n * @param propsToExclude - Names of properties which should *not* be copied.\n * @param a - Object to extend.\n * @param b - Object to take properties from for extension.\n * @param allowDeletion - If true, delete properties in a that are explicitly\n * set to null in b.\n *\n * @returns Argument a.\n */\nexport function selectiveNotDeepExtend(\n  propsToExclude: string[],\n  a: any,\n  b: any,\n  allowDeletion = false\n): any {\n  // TODO: add support for Arrays to deepExtend\n  // NOTE: array properties have an else-below; apparently, there is a problem here.\n  if (Array.isArray(b)) {\n    throw new TypeError(\"Arrays are not supported by deepExtend\");\n  }\n\n  for (const prop in b) {\n    if (!Object.prototype.hasOwnProperty.call(b, prop)) {\n      continue;\n    } // Handle local properties only\n    if (propsToExclude.indexOf(prop) !== -1) {\n      continue;\n    } // In exclusion list, skip\n\n    if (b[prop] && b[prop].constructor === Object) {\n      if (a[prop] === undefined) {\n        a[prop] = {};\n      }\n      if (a[prop].constructor === Object) {\n        deepExtend(a[prop], b[prop]); // NOTE: allowDeletion not propagated!\n      } else {\n        copyOrDelete(a, b, prop, allowDeletion);\n      }\n    } else if (Array.isArray(b[prop])) {\n      a[prop] = [];\n      for (let i = 0; i < b[prop].length; i++) {\n        a[prop].push(b[prop][i]);\n      }\n    } else {\n      copyOrDelete(a, b, prop, allowDeletion);\n    }\n  }\n\n  return a;\n}\n\n/**\n * Deep extend an object a with the properties of object b.\n *\n * @param a - Target object.\n * @param b - Source object.\n * @param protoExtend - If true, the prototype values will also be extended.\n * (That is the options objects that inherit from others will also get the\n * inherited options).\n * @param allowDeletion - If true, the values of fields that are null will be deleted.\n *\n * @returns Argument a.\n */\nexport function deepExtend(\n  a: any,\n  b: any,\n  protoExtend = false,\n  allowDeletion = false\n): any {\n  for (const prop in b) {\n    if (Object.prototype.hasOwnProperty.call(b, prop) || protoExtend === true) {\n      if (\n        typeof b[prop] === \"object\" &&\n        b[prop] !== null &&\n        Object.getPrototypeOf(b[prop]) === Object.prototype\n      ) {\n        if (a[prop] === undefined) {\n          a[prop] = deepExtend({}, b[prop], protoExtend); // NOTE: allowDeletion not propagated!\n        } else if (\n          typeof a[prop] === \"object\" &&\n          a[prop] !== null &&\n          Object.getPrototypeOf(a[prop]) === Object.prototype\n        ) {\n          deepExtend(a[prop], b[prop], protoExtend); // NOTE: allowDeletion not propagated!\n        } else {\n          copyOrDelete(a, b, prop, allowDeletion);\n        }\n      } else if (Array.isArray(b[prop])) {\n        a[prop] = b[prop].slice();\n      } else {\n        copyOrDelete(a, b, prop, allowDeletion);\n      }\n    }\n  }\n  return a;\n}\n\n/**\n * Test whether all elements in two arrays are equal.\n *\n * @param a - First array.\n * @param b - Second array.\n *\n * @returns True if both arrays have the same length and same elements (1 = '1').\n */\nexport function equalArray(a: unknown[], b: unknown[]): boolean {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (let i = 0, len = a.length; i < len; i++) {\n    if (a[i] != b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Get the type of an object, for example exports.getType([]) returns 'Array'.\n *\n * @param object - Input value of unknown type.\n *\n * @returns Detected type.\n */\nexport function getType(object: unknown): string {\n  const type = typeof object;\n\n  if (type === \"object\") {\n    if (object === null) {\n      return \"null\";\n    }\n    if (object instanceof Boolean) {\n      return \"Boolean\";\n    }\n    if (object instanceof Number) {\n      return \"Number\";\n    }\n    if (object instanceof String) {\n      return \"String\";\n    }\n    if (Array.isArray(object)) {\n      return \"Array\";\n    }\n    if (object instanceof Date) {\n      return \"Date\";\n    }\n\n    return \"Object\";\n  }\n  if (type === \"number\") {\n    return \"Number\";\n  }\n  if (type === \"boolean\") {\n    return \"Boolean\";\n  }\n  if (type === \"string\") {\n    return \"String\";\n  }\n  if (type === undefined) {\n    return \"undefined\";\n  }\n\n  return type;\n}\n\nexport function copyAndExtendArray<T>(arr: ReadonlyArray<T>, newValue: T): T[];\nexport function copyAndExtendArray<A, V>(\n  arr: ReadonlyArray<A>,\n  newValue: V\n): (A | V)[];\n/**\n * Used to extend an array and copy it. This is used to propagate paths recursively.\n *\n * @param arr - First part.\n * @param newValue - The value to be aadded into the array.\n *\n * @returns A new array with all items from arr and newValue (which is last).\n */\nexport function copyAndExtendArray<A, V>(\n  arr: ReadonlyArray<A>,\n  newValue: V\n): (A | V)[] {\n  return [...arr, newValue];\n}\n\n/**\n * Used to extend an array and copy it. This is used to propagate paths recursively.\n *\n * @param arr - The array to be copied.\n *\n * @returns Shallow copy of arr.\n */\nexport function copyArray<T>(arr: ReadonlyArray<T>): T[] {\n  return arr.slice();\n}\n\n/**\n * Retrieve the absolute left value of a DOM element.\n *\n * @param elem - A dom element, for example a div.\n *\n * @returns The absolute left position of this element in the browser page.\n */\nexport function getAbsoluteLeft(elem: Element): number {\n  return elem.getBoundingClientRect().left;\n}\n\n/**\n * Retrieve the absolute right value of a DOM element.\n *\n * @param elem - A dom element, for example a div.\n *\n * @returns The absolute right position of this element in the browser page.\n */\nexport function getAbsoluteRight(elem: Element): number {\n  return elem.getBoundingClientRect().right;\n}\n\n/**\n * Retrieve the absolute top value of a DOM element.\n *\n * @param elem - A dom element, for example a div.\n *\n * @returns The absolute top position of this element in the browser page.\n */\nexport function getAbsoluteTop(elem: Element): number {\n  return elem.getBoundingClientRect().top;\n}\n\n/**\n * Add a className to the given elements style.\n *\n * @param elem - The element to which the classes will be added.\n * @param classNames - Space separated list of classes.\n */\nexport function addClassName(elem: Element, classNames: string): void {\n  let classes = elem.className.split(\" \");\n  const newClasses = classNames.split(\" \");\n  classes = classes.concat(\n    newClasses.filter(function (className): boolean {\n      return classes.indexOf(className) < 0;\n    })\n  );\n  elem.className = classes.join(\" \");\n}\n\n/**\n * Remove a className from the given elements style.\n *\n * @param elem - The element from which the classes will be removed.\n * @param classNames - Space separated list of classes.\n */\nexport function removeClassName(elem: Element, classNames: string): void {\n  let classes = elem.className.split(\" \");\n  const oldClasses = classNames.split(\" \");\n  classes = classes.filter(function (className): boolean {\n    return oldClasses.indexOf(className) < 0;\n  });\n  elem.className = classes.join(\" \");\n}\n\nexport function forEach<V>(\n  array: undefined | null | V[],\n  callback: (value: V, index: number, object: V[]) => void\n): void;\nexport function forEach<O extends object>(\n  object: undefined | null | O,\n  callback: <Key extends keyof O>(value: O[Key], key: Key, object: O) => void\n): void;\n/**\n * For each method for both arrays and objects.\n * In case of an array, the built-in Array.forEach() is applied (**No, it's not!**).\n * In case of an Object, the method loops over all properties of the object.\n *\n * @param object - An Object or Array to be iterated over.\n * @param callback - Array.forEach-like callback.\n */\nexport function forEach(object: any, callback: any): void {\n  if (Array.isArray(object)) {\n    // array\n    const len = object.length;\n    for (let i = 0; i < len; i++) {\n      callback(object[i], i, object);\n    }\n  } else {\n    // object\n    for (const key in object) {\n      if (Object.prototype.hasOwnProperty.call(object, key)) {\n        callback(object[key], key, object);\n      }\n    }\n  }\n}\n\n/**\n * Convert an object into an array: all objects properties are put into the array. The resulting array is unordered.\n *\n * @param o - Object that contains the properties and methods.\n *\n * @returns An array of unordered values.\n */\nexport const toArray = Object.values;\n\n/**\n * Update a property in an object.\n *\n * @param object - The object whose property will be updated.\n * @param key - Name of the property to be updated.\n * @param value - The new value to be assigned.\n *\n * @returns Whether the value was updated (true) or already strictly the same in the original object (false).\n */\nexport function updateProperty<K extends string, V>(\n  object: Record<K, V>,\n  key: K,\n  value: V\n): boolean {\n  if (object[key] !== value) {\n    object[key] = value;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Throttle the given function to be only executed once per animation frame.\n *\n * @param fn - The original function.\n *\n * @returns The throttled function.\n */\nexport function throttle(fn: () => void): () => void {\n  let scheduled = false;\n\n  return (): void => {\n    if (!scheduled) {\n      scheduled = true;\n      requestAnimationFrame((): void => {\n        scheduled = false;\n        fn();\n      });\n    }\n  };\n}\n\n/**\n * Add and event listener. Works for all browsers.\n *\n * @param element - The element to bind the event listener to.\n * @param action - Same as Element.addEventListener(action, —, —).\n * @param listener - Same as Element.addEventListener(—, listener, —).\n * @param useCapture - Same as Element.addEventListener(—, —, useCapture).\n */\nexport function addEventListener<E extends Element>(\n  element: E,\n  action: Parameters<E[\"addEventListener\"]>[0],\n  listener: Parameters<E[\"addEventListener\"]>[1],\n  useCapture?: Parameters<E[\"addEventListener\"]>[2]\n): void {\n  if (element.addEventListener) {\n    if (useCapture === undefined) {\n      useCapture = false;\n    }\n\n    if (\n      action === \"mousewheel\" &&\n      navigator.userAgent.indexOf(\"Firefox\") >= 0\n    ) {\n      action = \"DOMMouseScroll\"; // For Firefox\n    }\n\n    element.addEventListener(action, listener, useCapture);\n  } else {\n    // @TODO: IE types? Does anyone care?\n    (element as any).attachEvent(\"on\" + action, listener); // IE browsers\n  }\n}\n\n/**\n * Remove an event listener from an element.\n *\n * @param element - The element to bind the event listener to.\n * @param action - Same as Element.removeEventListener(action, —, —).\n * @param listener - Same as Element.removeEventListener(—, listener, —).\n * @param useCapture - Same as Element.removeEventListener(—, —, useCapture).\n */\nexport function removeEventListener<E extends Element>(\n  element: E,\n  action: Parameters<E[\"removeEventListener\"]>[0],\n  listener: Parameters<E[\"removeEventListener\"]>[1],\n  useCapture?: Parameters<E[\"removeEventListener\"]>[2]\n): void {\n  if (element.removeEventListener) {\n    // non-IE browsers\n    if (useCapture === undefined) {\n      useCapture = false;\n    }\n\n    if (\n      action === \"mousewheel\" &&\n      navigator.userAgent.indexOf(\"Firefox\") >= 0\n    ) {\n      action = \"DOMMouseScroll\"; // For Firefox\n    }\n\n    element.removeEventListener(action, listener, useCapture);\n  } else {\n    // @TODO: IE types? Does anyone care?\n    (element as any).detachEvent(\"on\" + action, listener); // IE browsers\n  }\n}\n\n/**\n * Cancels the event's default action if it is cancelable, without stopping further propagation of the event.\n *\n * @param event - The event whose default action should be prevented.\n */\nexport function preventDefault(event: Event | undefined): void {\n  if (!event) {\n    event = window.event;\n  }\n\n  if (!event) {\n    // No event, no work.\n  } else if (event.preventDefault) {\n    event.preventDefault(); // non-IE browsers\n  } else {\n    // @TODO: IE types? Does anyone care?\n    (event as any).returnValue = false; // IE browsers\n  }\n}\n\n/**\n * Get HTML element which is the target of the event.\n *\n * @param event - The event.\n *\n * @returns The element or null if not obtainable.\n */\nexport function getTarget(\n  event: Event | undefined = window.event\n): Element | null {\n  // code from http://www.quirksmode.org/js/events_properties.html\n  // @TODO: EventTarget can be almost anything, is it okay to return only Elements?\n\n  let target: null | EventTarget = null;\n  if (!event) {\n    // No event, no target.\n  } else if (event.target) {\n    target = event.target;\n  } else if (event.srcElement) {\n    target = event.srcElement;\n  }\n\n  if (!(target instanceof Element)) {\n    return null;\n  }\n\n  if (target.nodeType != null && target.nodeType == 3) {\n    // defeat Safari bug\n    target = target.parentNode;\n    if (!(target instanceof Element)) {\n      return null;\n    }\n  }\n\n  return target;\n}\n\n/**\n * Check if given element contains given parent somewhere in the DOM tree.\n *\n * @param element - The element to be tested.\n * @param parent - The ancestor (not necessarily parent) of the element.\n *\n * @returns True if parent is an ancestor of the element, false otherwise.\n */\nexport function hasParent(element: Element, parent: Element): boolean {\n  let elem: Node = element;\n\n  while (elem) {\n    if (elem === parent) {\n      return true;\n    } else if (elem.parentNode) {\n      elem = elem.parentNode;\n    } else {\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport const option = {\n  /**\n   * Convert a value into a boolean.\n   *\n   * @param value - Value to be converted intoboolean, a function will be executed as `(() => unknown)`.\n   * @param defaultValue - If the value or the return value of the function == null then this will be returned.\n   *\n   * @returns Corresponding boolean value, if none then the default value, if none then null.\n   */\n  asBoolean(value: unknown, defaultValue?: boolean): boolean | null {\n    if (typeof value == \"function\") {\n      value = value();\n    }\n\n    if (value != null) {\n      return value != false;\n    }\n\n    return defaultValue || null;\n  },\n\n  /**\n   * Convert a value into a number.\n   *\n   * @param value - Value to be converted intonumber, a function will be executed as `(() => unknown)`.\n   * @param defaultValue - If the value or the return value of the function == null then this will be returned.\n   *\n   * @returns Corresponding **boxed** number value, if none then the default value, if none then null.\n   */\n  asNumber(value: unknown, defaultValue?: number): number | null {\n    if (typeof value == \"function\") {\n      value = value();\n    }\n\n    if (value != null) {\n      return Number(value) || defaultValue || null;\n    }\n\n    return defaultValue || null;\n  },\n\n  /**\n   * Convert a value into a string.\n   *\n   * @param value - Value to be converted intostring, a function will be executed as `(() => unknown)`.\n   * @param defaultValue - If the value or the return value of the function == null then this will be returned.\n   *\n   * @returns Corresponding **boxed** string value, if none then the default value, if none then null.\n   */\n  asString(value: unknown, defaultValue?: string): string | null {\n    if (typeof value == \"function\") {\n      value = value();\n    }\n\n    if (value != null) {\n      return String(value);\n    }\n\n    return defaultValue || null;\n  },\n\n  /**\n   * Convert a value into a size.\n   *\n   * @param value - Value to be converted intosize, a function will be executed as `(() => unknown)`.\n   * @param defaultValue - If the value or the return value of the function == null then this will be returned.\n   *\n   * @returns Corresponding string value (number + 'px'), if none then the default value, if none then null.\n   */\n  asSize(value: unknown, defaultValue?: string): string | null {\n    if (typeof value == \"function\") {\n      value = value();\n    }\n\n    if (isString(value)) {\n      return value;\n    } else if (isNumber(value)) {\n      return value + \"px\";\n    } else {\n      return defaultValue || null;\n    }\n  },\n\n  /**\n   * Convert a value into a DOM Element.\n   *\n   * @param value - Value to be converted into DOM Element, a function will be executed as `(() => unknown)`.\n   * @param defaultValue - If the value or the return value of the function == null then this will be returned.\n   *\n   * @returns The DOM Element, if none then the default value, if none then null.\n   */\n  asElement<T extends Node>(\n    value: T | (() => T | undefined) | undefined,\n    defaultValue: T\n  ): T | null {\n    if (typeof value == \"function\") {\n      value = value();\n    }\n\n    return value || defaultValue || null;\n  },\n};\n\n/**\n * Convert hex color string into RGB color object.\n *\n * @remarks\n * {@link http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb}\n *\n * @param hex - Hex color string (3 or 6 digits, with or without #).\n *\n * @returns RGB color object.\n */\nexport function hexToRGB(hex: string): RGB | null {\n  let result;\n  switch (hex.length) {\n    case 3:\n    case 4:\n      result = shortHexRE.exec(hex);\n      return result\n        ? {\n            r: parseInt(result[1] + result[1], 16),\n            g: parseInt(result[2] + result[2], 16),\n            b: parseInt(result[3] + result[3], 16),\n          }\n        : null;\n    case 6:\n    case 7:\n      result = fullHexRE.exec(hex);\n      return result\n        ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16),\n          }\n        : null;\n    default:\n      return null;\n  }\n}\n\n/**\n * This function takes string color in hex or RGB format and adds the opacity, RGBA is passed through unchanged.\n *\n * @param color - The color string (hex, RGB, RGBA).\n * @param opacity - The new opacity.\n *\n * @returns RGBA string, for example 'rgba(255, 0, 127, 0.3)'.\n */\nexport function overrideOpacity(color: string, opacity: number): string {\n  if (color.indexOf(\"rgba\") !== -1) {\n    return color;\n  } else if (color.indexOf(\"rgb\") !== -1) {\n    const rgb = color\n      .substr(color.indexOf(\"(\") + 1)\n      .replace(\")\", \"\")\n      .split(\",\");\n    return \"rgba(\" + rgb[0] + \",\" + rgb[1] + \",\" + rgb[2] + \",\" + opacity + \")\";\n  } else {\n    const rgb = hexToRGB(color);\n    if (rgb == null) {\n      return color;\n    } else {\n      return \"rgba(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \",\" + opacity + \")\";\n    }\n  }\n}\n\n/**\n * Convert RGB \\<0, 255\\> into hex color string.\n *\n * @param red - Red channel.\n * @param green - Green channel.\n * @param blue - Blue channel.\n *\n * @returns Hex color string (for example: '#0acdc0').\n */\nexport function RGBToHex(red: number, green: number, blue: number): string {\n  return (\n    \"#\" + ((1 << 24) + (red << 16) + (green << 8) + blue).toString(16).slice(1)\n  );\n}\n\nexport interface ColorObject {\n  background?: string;\n  border?: string;\n  hover?:\n    | string\n    | {\n        border?: string;\n        background?: string;\n      };\n  highlight?:\n    | string\n    | {\n        border?: string;\n        background?: string;\n      };\n}\nexport interface FullColorObject {\n  background: string;\n  border: string;\n  hover: {\n    border: string;\n    background: string;\n  };\n  highlight: {\n    border: string;\n    background: string;\n  };\n}\n\nexport function parseColor(inputColor: string): FullColorObject;\nexport function parseColor(inputColor: FullColorObject): FullColorObject;\nexport function parseColor(inputColor: ColorObject): ColorObject;\nexport function parseColor(\n  inputColor: ColorObject,\n  defaultColor: FullColorObject\n): FullColorObject;\n/**\n * Parse a color property into an object with border, background, and highlight colors.\n *\n * @param inputColor - Shorthand color string or input color object.\n * @param defaultColor - Full color object to fill in missing values in inputColor.\n *\n * @returns Color object.\n */\nexport function parseColor(\n  inputColor: ColorObject | string,\n  defaultColor?: FullColorObject\n): ColorObject | FullColorObject {\n  if (isString(inputColor)) {\n    let colorStr: string = inputColor;\n    if (isValidRGB(colorStr)) {\n      const rgb = colorStr\n        .substr(4)\n        .substr(0, colorStr.length - 5)\n        .split(\",\")\n        .map(function (value): number {\n          return parseInt(value);\n        });\n      colorStr = RGBToHex(rgb[0], rgb[1], rgb[2]);\n    }\n    if (isValidHex(colorStr) === true) {\n      const hsv = hexToHSV(colorStr);\n      const lighterColorHSV = {\n        h: hsv.h,\n        s: hsv.s * 0.8,\n        v: Math.min(1, hsv.v * 1.02),\n      };\n      const darkerColorHSV = {\n        h: hsv.h,\n        s: Math.min(1, hsv.s * 1.25),\n        v: hsv.v * 0.8,\n      };\n      const darkerColorHex = HSVToHex(\n        darkerColorHSV.h,\n        darkerColorHSV.s,\n        darkerColorHSV.v\n      );\n      const lighterColorHex = HSVToHex(\n        lighterColorHSV.h,\n        lighterColorHSV.s,\n        lighterColorHSV.v\n      );\n      return {\n        background: colorStr,\n        border: darkerColorHex,\n        highlight: {\n          background: lighterColorHex,\n          border: darkerColorHex,\n        },\n        hover: {\n          background: lighterColorHex,\n          border: darkerColorHex,\n        },\n      };\n    } else {\n      return {\n        background: colorStr,\n        border: colorStr,\n        highlight: {\n          background: colorStr,\n          border: colorStr,\n        },\n        hover: {\n          background: colorStr,\n          border: colorStr,\n        },\n      };\n    }\n  } else {\n    if (defaultColor) {\n      const color: FullColorObject = {\n        background: inputColor.background || defaultColor.background,\n        border: inputColor.border || defaultColor.border,\n        highlight: isString(inputColor.highlight)\n          ? {\n              border: inputColor.highlight,\n              background: inputColor.highlight,\n            }\n          : {\n              background:\n                (inputColor.highlight && inputColor.highlight.background) ||\n                defaultColor.highlight.background,\n              border:\n                (inputColor.highlight && inputColor.highlight.border) ||\n                defaultColor.highlight.border,\n            },\n        hover: isString(inputColor.hover)\n          ? {\n              border: inputColor.hover,\n              background: inputColor.hover,\n            }\n          : {\n              border:\n                (inputColor.hover && inputColor.hover.border) ||\n                defaultColor.hover.border,\n              background:\n                (inputColor.hover && inputColor.hover.background) ||\n                defaultColor.hover.background,\n            },\n      };\n      return color;\n    } else {\n      const color: ColorObject = {\n        background: inputColor.background || undefined,\n        border: inputColor.border || undefined,\n        highlight: isString(inputColor.highlight)\n          ? {\n              border: inputColor.highlight,\n              background: inputColor.highlight,\n            }\n          : {\n              background:\n                (inputColor.highlight && inputColor.highlight.background) ||\n                undefined,\n              border:\n                (inputColor.highlight && inputColor.highlight.border) ||\n                undefined,\n            },\n        hover: isString(inputColor.hover)\n          ? {\n              border: inputColor.hover,\n              background: inputColor.hover,\n            }\n          : {\n              border:\n                (inputColor.hover && inputColor.hover.border) || undefined,\n              background:\n                (inputColor.hover && inputColor.hover.background) || undefined,\n            },\n      };\n      return color;\n    }\n  }\n}\n\n/**\n * Convert RGB \\<0, 255\\> into HSV object.\n *\n * @remarks\n * {@link http://www.javascripter.net/faq/rgb2hsv.htm}\n *\n * @param red - Red channel.\n * @param green - Green channel.\n * @param blue - Blue channel.\n *\n * @returns HSV color object.\n */\nexport function RGBToHSV(red: number, green: number, blue: number): HSV {\n  red = red / 255;\n  green = green / 255;\n  blue = blue / 255;\n  const minRGB = Math.min(red, Math.min(green, blue));\n  const maxRGB = Math.max(red, Math.max(green, blue));\n\n  // Black-gray-white\n  if (minRGB === maxRGB) {\n    return { h: 0, s: 0, v: minRGB };\n  }\n\n  // Colors other than black-gray-white:\n  const d =\n    red === minRGB ? green - blue : blue === minRGB ? red - green : blue - red;\n  const h = red === minRGB ? 3 : blue === minRGB ? 1 : 5;\n  const hue = (60 * (h - d / (maxRGB - minRGB))) / 360;\n  const saturation = (maxRGB - minRGB) / maxRGB;\n  const value = maxRGB;\n  return { h: hue, s: saturation, v: value };\n}\n\ninterface CSSStyles {\n  [key: string]: string;\n}\nconst cssUtil = {\n  // split a string with css styles into an object with key/values\n  split(cssText: string): CSSStyles {\n    const styles: CSSStyles = {};\n\n    cssText.split(\";\").forEach((style): void => {\n      if (style.trim() != \"\") {\n        const parts = style.split(\":\");\n        const key = parts[0].trim();\n        const value = parts[1].trim();\n        styles[key] = value;\n      }\n    });\n\n    return styles;\n  },\n\n  // build a css text string from an object with key/values\n  join(styles: CSSStyles): string {\n    return Object.keys(styles)\n      .map(function (key): string {\n        return key + \": \" + styles[key];\n      })\n      .join(\"; \");\n  },\n};\n\n/**\n * Append a string with css styles to an element.\n *\n * @param element - The element that will receive new styles.\n * @param cssText - The styles to be appended.\n */\nexport function addCssText(element: HTMLElement, cssText: string): void {\n  const currentStyles = cssUtil.split(element.style.cssText);\n  const newStyles = cssUtil.split(cssText);\n  const styles = {\n    ...currentStyles,\n    ...newStyles,\n  };\n\n  element.style.cssText = cssUtil.join(styles);\n}\n\n/**\n * Remove a string with css styles from an element.\n *\n * @param element - The element from which styles should be removed.\n * @param cssText - The styles to be removed.\n */\nexport function removeCssText(element: HTMLElement, cssText: string): void {\n  const styles = cssUtil.split(element.style.cssText);\n  const removeStyles = cssUtil.split(cssText);\n\n  for (const key in removeStyles) {\n    if (Object.prototype.hasOwnProperty.call(removeStyles, key)) {\n      delete styles[key];\n    }\n  }\n\n  element.style.cssText = cssUtil.join(styles);\n}\n\n/**\n * Convert HSV \\<0, 1\\> into RGB color object.\n *\n * @remarks\n * {@link https://gist.github.com/mjijackson/5311256}\n *\n * @param h - Hue.\n * @param s - Saturation.\n * @param v - Value.\n *\n * @returns RGB color object.\n */\nexport function HSVToRGB(h: number, s: number, v: number): RGB {\n  let r: undefined | number;\n  let g: undefined | number;\n  let b: undefined | number;\n\n  const i = Math.floor(h * 6);\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      (r = v), (g = t), (b = p);\n      break;\n    case 1:\n      (r = q), (g = v), (b = p);\n      break;\n    case 2:\n      (r = p), (g = v), (b = t);\n      break;\n    case 3:\n      (r = p), (g = q), (b = v);\n      break;\n    case 4:\n      (r = t), (g = p), (b = v);\n      break;\n    case 5:\n      (r = v), (g = p), (b = q);\n      break;\n  }\n\n  return {\n    r: Math.floor((r as number) * 255),\n    g: Math.floor((g as number) * 255),\n    b: Math.floor((b as number) * 255),\n  };\n}\n\n/**\n * Convert HSV \\<0, 1\\> into hex color string.\n *\n * @param h - Hue.\n * @param s - Saturation.\n * @param v - Value.\n *\n * @returns Hex color string.\n */\nexport function HSVToHex(h: number, s: number, v: number): string {\n  const rgb = HSVToRGB(h, s, v);\n  return RGBToHex(rgb.r, rgb.g, rgb.b);\n}\n\n/**\n * Convert hex color string into HSV \\<0, 1\\>.\n *\n * @param hex - Hex color string.\n *\n * @returns HSV color object.\n */\nexport function hexToHSV(hex: string): HSV {\n  const rgb = hexToRGB(hex);\n  if (!rgb) {\n    throw new TypeError(`'${hex}' is not a valid color.`);\n  }\n  return RGBToHSV(rgb.r, rgb.g, rgb.b);\n}\n\n/**\n * Validate hex color string.\n *\n * @param hex - Unknown string that may contain a color.\n *\n * @returns True if the string is valid, false otherwise.\n */\nexport function isValidHex(hex: string): boolean {\n  const isOk = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(hex);\n  return isOk;\n}\n\n/**\n * Validate RGB color string.\n *\n * @param rgb - Unknown string that may contain a color.\n *\n * @returns True if the string is valid, false otherwise.\n */\nexport function isValidRGB(rgb: string): boolean {\n  return rgbRE.test(rgb);\n}\n\n/**\n * Validate RGBA color string.\n *\n * @param rgba - Unknown string that may contain a color.\n *\n * @returns True if the string is valid, false otherwise.\n */\nexport function isValidRGBA(rgba: string): boolean {\n  return rgbaRE.test(rgba);\n}\n\n/**\n * This recursively redirects the prototype of JSON objects to the referenceObject.\n * This is used for default options.\n *\n * @param fields - Names of properties to be bridged.\n * @param referenceObject - The original object.\n *\n * @returns A new object inheriting from the referenceObject.\n */\nexport function selectiveBridgeObject<F extends string, V>(\n  fields: F[],\n  referenceObject: Record<F, V>\n): Record<F, V> | null {\n  if (referenceObject !== null && typeof referenceObject === \"object\") {\n    // !!! typeof null === 'object'\n    const objectTo = Object.create(referenceObject);\n    for (let i = 0; i < fields.length; i++) {\n      if (Object.prototype.hasOwnProperty.call(referenceObject, fields[i])) {\n        if (typeof referenceObject[fields[i]] == \"object\") {\n          objectTo[fields[i]] = bridgeObject(referenceObject[fields[i]]);\n        }\n      }\n    }\n    return objectTo;\n  } else {\n    return null;\n  }\n}\n\nexport function bridgeObject<T extends object>(referenceObject: T): T;\nexport function bridgeObject<T>(referenceObject: T): null;\n/**\n * This recursively redirects the prototype of JSON objects to the referenceObject.\n * This is used for default options.\n *\n * @param referenceObject - The original object.\n *\n * @returns The Element if the referenceObject is an Element, or a new object inheriting from the referenceObject.\n */\nexport function bridgeObject<T extends object | null>(\n  referenceObject: T\n): T | null {\n  if (referenceObject === null || typeof referenceObject !== \"object\") {\n    return null;\n  }\n\n  if (referenceObject instanceof Element) {\n    // Avoid bridging DOM objects\n    return referenceObject;\n  }\n\n  const objectTo = Object.create(referenceObject);\n  for (const i in referenceObject) {\n    if (Object.prototype.hasOwnProperty.call(referenceObject, i)) {\n      if (typeof (referenceObject as any)[i] == \"object\") {\n        objectTo[i] = bridgeObject((referenceObject as any)[i]);\n      }\n    }\n  }\n\n  return objectTo;\n}\n\n/**\n * This method provides a stable sort implementation, very fast for presorted data.\n *\n * @param a - The array to be sorted (in-place).\n * @param compare - An order comparator.\n *\n * @returns The argument a.\n */\nexport function insertSort<T>(a: T[], compare: (a: T, b: T) => number): T[] {\n  for (let i = 0; i < a.length; i++) {\n    const k = a[i];\n    let j;\n    for (j = i; j > 0 && compare(k, a[j - 1]) < 0; j--) {\n      a[j] = a[j - 1];\n    }\n    a[j] = k;\n  }\n  return a;\n}\n\n/**\n * This is used to set the options of subobjects in the options object.\n *\n * A requirement of these subobjects is that they have an 'enabled' element\n * which is optional for the user but mandatory for the program.\n *\n * The added value here of the merge is that option 'enabled' is set as required.\n *\n * @param mergeTarget - Either this.options or the options used for the groups.\n * @param options - Options.\n * @param option - Option key in the options argument.\n * @param globalOptions - Global options, passed in to determine value of option 'enabled'.\n */\nexport function mergeOptions(\n  mergeTarget: any,\n  options: any,\n  option: string,\n  globalOptions: any = {}\n): void {\n  // Local helpers\n  const isPresent = function (obj: any): boolean {\n    return obj !== null && obj !== undefined;\n  };\n\n  const isObject = function (obj: unknown): boolean {\n    return obj !== null && typeof obj === \"object\";\n  };\n\n  // https://stackoverflow.com/a/34491287/1223531\n  const isEmpty = function (obj: object): obj is {} {\n    for (const x in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, x)) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // Guards\n  if (!isObject(mergeTarget)) {\n    throw new Error(\"Parameter mergeTarget must be an object\");\n  }\n\n  if (!isObject(options)) {\n    throw new Error(\"Parameter options must be an object\");\n  }\n\n  if (!isPresent(option)) {\n    throw new Error(\"Parameter option must have a value\");\n  }\n\n  if (!isObject(globalOptions)) {\n    throw new Error(\"Parameter globalOptions must be an object\");\n  }\n\n  //\n  // Actual merge routine, separated from main logic\n  // Only a single level of options is merged. Deeper levels are ref'd. This may actually be an issue.\n  //\n  const doMerge = function (target: any, options: any, option: string): void {\n    if (!isObject(target[option])) {\n      target[option] = {};\n    }\n\n    const src = options[option];\n    const dst = target[option];\n    for (const prop in src) {\n      if (Object.prototype.hasOwnProperty.call(src, prop)) {\n        dst[prop] = src[prop];\n      }\n    }\n  };\n\n  // Local initialization\n  const srcOption = options[option];\n  const globalPassed = isObject(globalOptions) && !isEmpty(globalOptions);\n  const globalOption = globalPassed ? globalOptions[option] : undefined;\n  const globalEnabled = globalOption ? globalOption.enabled : undefined;\n\n  /////////////////////////////////////////\n  // Main routine\n  /////////////////////////////////////////\n  if (srcOption === undefined) {\n    return; // Nothing to do\n  }\n\n  if (typeof srcOption === \"boolean\") {\n    if (!isObject(mergeTarget[option])) {\n      mergeTarget[option] = {};\n    }\n\n    mergeTarget[option].enabled = srcOption;\n    return;\n  }\n\n  if (srcOption === null && !isObject(mergeTarget[option])) {\n    // If possible, explicit copy from globals\n    if (isPresent(globalOption)) {\n      mergeTarget[option] = Object.create(globalOption);\n    } else {\n      return; // Nothing to do\n    }\n  }\n\n  if (!isObject(srcOption)) {\n    return;\n  }\n\n  //\n  // Ensure that 'enabled' is properly set. It is required internally\n  // Note that the value from options will always overwrite the existing value\n  //\n  let enabled = true; // default value\n\n  if (srcOption.enabled !== undefined) {\n    enabled = srcOption.enabled;\n  } else {\n    // Take from globals, if present\n    if (globalEnabled !== undefined) {\n      enabled = globalOption.enabled;\n    }\n  }\n\n  doMerge(mergeTarget, options, option);\n  mergeTarget[option].enabled = enabled;\n}\n\nexport function binarySearchCustom<\n  O extends object,\n  K1 extends keyof O,\n  K2 extends keyof O[K1]\n>(\n  orderedItems: O[],\n  comparator: (v: O[K1][K2]) => -1 | 0 | 1,\n  field: K1,\n  field2: K2\n): number;\nexport function binarySearchCustom<O extends object, K1 extends keyof O>(\n  orderedItems: O[],\n  comparator: (v: O[K1]) => -1 | 0 | 1,\n  field: K1\n): number;\n/**\n * This function does a binary search for a visible item in a sorted list. If we find a visible item, the code that uses\n * this function will then iterate in both directions over this sorted list to find all visible items.\n *\n * @param orderedItems - Items ordered by start.\n * @param comparator - -1 is lower, 0 is equal, 1 is higher.\n * @param field - Property name on an item (That is item[field]).\n * @param field2 - Second property name on an item (That is item[field][field2]).\n *\n * @returns Index of the found item or -1 if nothing was found.\n */\nexport function binarySearchCustom(\n  orderedItems: any[],\n  comparator: (v: unknown) => -1 | 0 | 1,\n  field: string,\n  field2?: string\n): number {\n  const maxIterations = 10000;\n  let iteration = 0;\n  let low = 0;\n  let high = orderedItems.length - 1;\n\n  while (low <= high && iteration < maxIterations) {\n    const middle = Math.floor((low + high) / 2);\n\n    const item = orderedItems[middle];\n    const value = field2 === undefined ? item[field] : item[field][field2];\n\n    const searchResult = comparator(value);\n    if (searchResult == 0) {\n      // jihaa, found a visible item!\n      return middle;\n    } else if (searchResult == -1) {\n      // it is too small --> increase low\n      low = middle + 1;\n    } else {\n      // it is too big --> decrease high\n      high = middle - 1;\n    }\n\n    iteration++;\n  }\n\n  return -1;\n}\n\n/**\n * This function does a binary search for a specific value in a sorted array.\n * If it does not exist but is in between of two values, we return either the\n * one before or the one after, depending on user input If it is found, we\n * return the index, else -1.\n *\n * @param orderedItems - Sorted array.\n * @param target - The searched value.\n * @param field - Name of the property in items to be searched.\n * @param sidePreference - If the target is between two values, should the index of the before or the after be returned?\n * @param comparator - An optional comparator, returning -1, 0, 1 for \\<, ===, \\>.\n *\n * @returns The index of found value or -1 if nothing was found.\n */\nexport function binarySearchValue<T extends string>(\n  orderedItems: { [K in T]: number }[],\n  target: number,\n  field: T,\n  sidePreference: \"before\" | \"after\",\n  comparator?: (a: number, b: number) => -1 | 0 | 1\n): number {\n  const maxIterations = 10000;\n  let iteration = 0;\n  let low = 0;\n  let high = orderedItems.length - 1;\n  let prevValue;\n  let value;\n  let nextValue;\n  let middle;\n\n  comparator =\n    comparator != undefined\n      ? comparator\n      : function (a: number, b: number): -1 | 0 | 1 {\n          return a == b ? 0 : a < b ? -1 : 1;\n        };\n\n  while (low <= high && iteration < maxIterations) {\n    // get a new guess\n    middle = Math.floor(0.5 * (high + low));\n    prevValue = orderedItems[Math.max(0, middle - 1)][field];\n    value = orderedItems[middle][field];\n    nextValue =\n      orderedItems[Math.min(orderedItems.length - 1, middle + 1)][field];\n\n    if (comparator(value, target) == 0) {\n      // we found the target\n      return middle;\n    } else if (\n      comparator(prevValue, target) < 0 &&\n      comparator(value, target) > 0\n    ) {\n      // target is in between of the previous and the current\n      return sidePreference == \"before\" ? Math.max(0, middle - 1) : middle;\n    } else if (\n      comparator(value, target) < 0 &&\n      comparator(nextValue, target) > 0\n    ) {\n      // target is in between of the current and the next\n      return sidePreference == \"before\"\n        ? middle\n        : Math.min(orderedItems.length - 1, middle + 1);\n    } else {\n      // didnt find the target, we need to change our boundaries.\n      if (comparator(value, target) < 0) {\n        // it is too small --> increase low\n        low = middle + 1;\n      } else {\n        // it is too big --> decrease high\n        high = middle - 1;\n      }\n    }\n    iteration++;\n  }\n\n  // didnt find anything. Return -1.\n  return -1;\n}\n\n/*\n * Easing Functions.\n * Only considering the t value for the range [0, 1] => [0, 1].\n *\n * Inspiration: from http://gizma.com/easing/\n * https://gist.github.com/gre/1650294\n */\nexport const easingFunctions = {\n  /**\n   * Provides no easing and no acceleration.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  linear(t: number): number {\n    return t;\n  },\n\n  /**\n   * Accelerate from zero velocity.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeInQuad(t: number): number {\n    return t * t;\n  },\n\n  /**\n   * Decelerate to zero velocity.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeOutQuad(t: number): number {\n    return t * (2 - t);\n  },\n\n  /**\n   * Accelerate until halfway, then decelerate.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeInOutQuad(t: number): number {\n    return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n  },\n\n  /**\n   * Accelerate from zero velocity.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeInCubic(t: number): number {\n    return t * t * t;\n  },\n\n  /**\n   * Decelerate to zero velocity.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeOutCubic(t: number): number {\n    return --t * t * t + 1;\n  },\n\n  /**\n   * Accelerate until halfway, then decelerate.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeInOutCubic(t: number): number {\n    return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n  },\n\n  /**\n   * Accelerate from zero velocity.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeInQuart(t: number): number {\n    return t * t * t * t;\n  },\n\n  /**\n   * Decelerate to zero velocity.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeOutQuart(t: number): number {\n    return 1 - --t * t * t * t;\n  },\n\n  /**\n   * Accelerate until halfway, then decelerate.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeInOutQuart(t: number): number {\n    return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n  },\n\n  /**\n   * Accelerate from zero velocity.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeInQuint(t: number): number {\n    return t * t * t * t * t;\n  },\n\n  /**\n   * Decelerate to zero velocity.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeOutQuint(t: number): number {\n    return 1 + --t * t * t * t * t;\n  },\n\n  /**\n   * Accelerate until halfway, then decelerate.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeInOutQuint(t: number): number {\n    return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n  },\n};\n\n/**\n * Experimentaly compute the width of the scrollbar for this browser.\n *\n * @returns The width in pixels.\n */\nexport function getScrollBarWidth(): number {\n  const inner = document.createElement(\"p\");\n  inner.style.width = \"100%\";\n  inner.style.height = \"200px\";\n\n  const outer = document.createElement(\"div\");\n  outer.style.position = \"absolute\";\n  outer.style.top = \"0px\";\n  outer.style.left = \"0px\";\n  outer.style.visibility = \"hidden\";\n  outer.style.width = \"200px\";\n  outer.style.height = \"150px\";\n  outer.style.overflow = \"hidden\";\n  outer.appendChild(inner);\n\n  document.body.appendChild(outer);\n  const w1 = inner.offsetWidth;\n  outer.style.overflow = \"scroll\";\n  let w2 = inner.offsetWidth;\n  if (w1 == w2) {\n    w2 = outer.clientWidth;\n  }\n\n  document.body.removeChild(outer);\n\n  return w1 - w2;\n}\n\n// @TODO: This doesn't work properly.\n// It works only for single property objects,\n// otherwise it combines all of the types in a union.\n// export function topMost<K1 extends string, V1> (\n//   pile: Record<K1, undefined | V1>[],\n//   accessors: K1 | [K1]\n// ): undefined | V1\n// export function topMost<K1 extends string, K2 extends string, V1, V2> (\n//   pile: Record<K1, undefined | V1 | Record<K2, undefined | V2>>[],\n//   accessors: [K1, K2]\n// ): undefined | V1 | V2\n// export function topMost<K1 extends string, K2 extends string, K3 extends string, V1, V2, V3> (\n//   pile: Record<K1, undefined | V1 | Record<K2, undefined | V2 | Record<K3, undefined | V3>>>[],\n//   accessors: [K1, K2, K3]\n// ): undefined | V1 | V2 | V3\n/**\n * Get the top most property value from a pile of objects.\n *\n * @param pile - Array of objects, no required format.\n * @param accessors - Array of property names.\n * For example `object['foo']['bar']` → `['foo', 'bar']`.\n *\n * @returns Value of the property with given accessors path from the first pile item where it's not undefined.\n */\nexport function topMost(pile: any, accessors: any): any {\n  let candidate;\n  if (!Array.isArray(accessors)) {\n    accessors = [accessors];\n  }\n  for (const member of pile) {\n    if (member) {\n      candidate = member[accessors[0]];\n      for (let i = 1; i < accessors.length; i++) {\n        if (candidate) {\n          candidate = candidate[accessors[i]];\n        }\n      }\n      if (typeof candidate !== \"undefined\") {\n        break;\n      }\n    }\n  }\n  return candidate;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}